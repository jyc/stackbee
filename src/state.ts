import { evaluateTemplate, JSONValue, mapJSON, stringForError } from "lib";
import { Problem, ProgramAndExample, SEED_LEN, evaluateSequence } from "program";

const API_KEY = process.env.DEFAULT_API_KEY || "{{TODO: enter an API key}}";

export type StateProblem = Problem & {
  /**
   * The correct choice is given to the LLM in this position, mixed among
   * the incorrect choices from `problem.incorrects`. */
  correctChoiceIdx: number;
};

export interface CharlieState {
  messages: JSONValue[];
  consistent: boolean;
}

export interface State {
  problem: StateProblem;
  isRunning: boolean;
  runError: string;
  comments?: string;

  alice: null | {
    messages: JSONValue[];

    choiceIdx: number | null;
    pattern: string;
  };
  aliceComments?: string;

  bob: null | {
    messages: JSONValue[];

    choiceIdx: number | null;
  };
  bobComments?: string;

  charlie: null | {
    alice: CharlieState | null;
    bob: CharlieState | null;
  };
  charlieComments?: string;
}

export interface Settings {
  /** A problem encoded using `encodeProblem`. */
  problem?: string;

  /**
   * Bytes. [1,13].
   * MAX_SAFE_INTEGER is 2^53-1; 2^(14 * 4) = 2^56
   */
  difficulty: number;

  /** Use `{{var}}` for template variables. */
  prompts: {
    alice: JSONValue[];
    bob: JSONValue[];
    charlie: JSONValue[];
  };

  api: {
    url: string;
    method: "POST";
    headers: Record<string, string>;
    /**
     * Use `{{JSON.stringify(var)}}` to output `var` using JSON.stringify.
     * Passed an array of `JSONValue[]` as `MESSAGES`.
     */
    body: string;
    /**
     * The body of a JavaScript function.
     *
     * Must `return` an object. The keys of the object are:
     *
     * Return `{ action: 'reply', append: JSONValue[] }` to append the value of
     * `append` to `MESSAGES` and make another call to the API, e.g. to handle
     * tool-use.
     *
     * Note that `reply` is a list! It's expected that you will return *both* the
     * tool use/function call request message generated by the LLM as well as
     * the tool result/response message that you generate.
     *
     * Return `{ action: 'stop', append: JSONValue[], output: string }` to
     * return the final text output of the LLM.
     */
    parse: string;
  };
}

export function checkSettings(settings: Settings): null | string {
  if (settings.problem) {
    try {
      decodeProblem(settings.problem);
    } catch (e) {
      return stringForError(e);
    }
  }

  if (settings.difficulty < 1 || settings.difficulty > 13) {
    return "difficulty must be between 1 and 13";
  }

  let todo = null;
  try {
    mapJSON(
      (x: JSONValue) => {
        if (typeof x === "string") {
          evaluateTemplate(x, (e) => {
            if (e.startsWith("TODO:")) {
              todo = e;
              throw Error("break");
            }
            return e;
          });
        }
        return null;
      },
      settings as unknown as JSONValue,
    );
  } catch {}
  if (todo) {
    return "found " + todo;
  }

  return null;
}

export function encodeProblem(problem: StateProblem): string {
  return [
    "1",
    problem.hex,
    problem.incorrects.map((incorrect) => incorrect.hex).join("x"),
    problem.examples.map((examples) => examples.slice(0, SEED_LEN).map(String).join("w")).join("x"),
    problem.correct.slice(0, SEED_LEN).map(String).join("x"),
    String(problem.correctChoiceIdx),
  ].join("y");
}

export function decodeProblem(encoded: string): StateProblem {
  const [version, hex, encodedIncorrectHexs, encodedExampleSeeds, encodedSeed, correctChoiceIdx] =
    encoded.split("y");
  if (version !== "1") {
    throw Error("unsupported version");
  }
  const seed = encodedSeed.split("x").map((s) => parseInt(s));
  const incorrects = encodedIncorrectHexs.split("x").map((incorrectHex): ProgramAndExample => {
    return {
      hex: incorrectHex,
      seq: evaluateSequence(incorrectHex, seed),
    };
  });
  const examples = encodedExampleSeeds.split("x").map((s) => {
    const exampleSeed = s.split("w").map(Number);
    return evaluateSequence(hex, exampleSeed);
  });
  const correct = evaluateSequence(hex, seed);
  return {
    hex,
    examples,
    correct,
    incorrects,
    correctChoiceIdx: parseInt(correctChoiceIdx),
  };
}

// Constants

export const DEFAULT_SETTINGS: Settings = {
  difficulty: 5,
  prompts: {
    alice: [
      {
        role: "user",
        content: `Here are {{EXAMPLE_COUNT}} number sequences that follow a common pattern.
The first {{SEED_LEN}} terms of each sequence are arbitrary; the subsequent terms follow a pattern.

{{EXAMPLES}}

Which one of the following sequences follows the same pattern?
Write "MATCH: X" if (X) matches the pattern or "MATCH: NONE" if no sequences match.

Also describe the pattern in a way that would allow someone else to identify the matching number sequence.
Write "PATTERN: pattern here", using as many sentences as you'd like, but keeping it all on one line.

{{CHOICES}}`,
      },
    ],
    bob: [
      {
        role: "user",
        content: `Which one of the following sequences follows this pattern?
The first {{SEED_LEN}} terms of each sequence are arbitrary; the subsequent terms follow a pattern.
Write "MATCH: X" if (X) matches the pattern or "MATCH: NONE" if no sequences match.

{{PATTERN}}

{{CHOICES}}`,
      },
    ],
    charlie: [
      {
        role: "user",
        content: `Does all of the following number sequences follow this pattern?
The first {{SEED_LEN}} terms of each sequence are arbitrary; the subsequent terms follow a pattern.
Write out your reasoning.
At the end, write "ANSWER: YES" or "ANSWER: NO".

{{PATTERN}}

{{EXAMPLES}}
{{CHOICE}}`,
      },
    ],
  },

  api: {
    url: "https://api.anthropic.com/v1/messages",
    method: "POST",
    headers: {
      "x-api-key": API_KEY,
      "anthropic-version": "2023-06-01",
      "content-type": "application/json",
      "anthropic-dangerous-direct-browser-access": "true",
    },
    body: `{
  "model": "claude-3-5-sonnet-20240620",
  "max_tokens": 1024,
  "messages": {{JSON.stringify(MESSAGES)}},
  "tools": [
    {
      "name": "eval_js",
      "description": "Evaluate JavaScript code. The result will encoded as a string using JSON.stringify.",
      "input_schema": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "JavaScript code to evaluate inside of an anonymous function. Use a return statement to return a result. For example, 'return [1 - 1, 2 - 1];' will evaluate to [0, 1]."
          }
        },
        "required": ["code"]
      }
    }
  ]
}`,
    parse: `const AsyncFunction = async function () {}.constructor;

const body = await response.json();
const lastContent = body.content[body.content.length - 1];
const message = {
  role: "assistant",
  content: body.content
};

if (body.stop_reason === "tool_use") {
  if (lastContent.name !== "eval_js") {
    throw Error("unrecognized tool: " + lastContent.name);
  }
  let content;
  try {
    const evaluated = await AsyncFunction(lastContent.input.code)();
    content = JSON.stringify(evaluated);
  } catch (e) {
    content = String(e);
  }
  return {
    action: 'reply',
    append: [
      message,
      {
        role: "user",
        content: [
          {
            type: "tool_result",
            tool_use_id: lastContent.id,
            content,
          }
        ]
      }
    ]
  };
}

return {
  action: 'stop',
  append: [message],
  output: lastContent.text
};
`,
  },
};

const EXAMPLE_51F85: State = {
  problem: {
    hex: "51f85",
    examples: [
      [6, 8, -2, 10, -12, 22, -34, 56],
      [8, 2, 6, -4, 10, -14, 24, -38],
    ],
    correct: [5, 10, -5, 15, -20, 35, -55, 90],
    incorrects: [
      { hex: "ebc44", seq: [5, 10, 17, 25, 34, 44, 55, 67] },
      { hex: "1b4c5", seq: [5, 10, 6, 2, -2, -6, -10, -14] },
      { hex: "2c54", seq: [5, 10, 7, 4, 1, -2, -5, -8] },
    ],
    correctChoiceIdx: 2,
  },
  isRunning: false,
  runError: "",

  comments: "Subtract the last term from the second-to-last term.",
  aliceComments:
    "Alice picked the right answer! But her explanation makes no sense. Why is she mentioning a geometric sequence?",
  bobComments: `Bob confirms that Alice's pattern doesn't make sense. You can remove the JavaScript evaluation tool from the settings to give Bob a harder time.`,
  charlieComments: "Charlie confirms that Alice's pattern doesn't even match the two examples.",

  alice: {
    messages: [
      {
        role: "user",
        content:
          'Here are 2 number sequences that follow a common pattern.\nThe first 2 terms of each sequence are arbitrary; the subsequent terms follow a pattern.\n\n6 8 -2 10 -12 22 -34 56\n8 2 6 -4 10 -14 24 -38\n\nWhich one of the following sequences follows the same pattern?\nWrite "MATCH: X" if (X) matches the pattern or "MATCH: NONE" if no sequences match.\n\nAlso describe the pattern in a way that would allow someone else to identify the matching number sequence.\nWrite "PATTERN: pattern here", using as many sentences as you\'d like, but keeping it all on one line.\n\n(A) 5 10 17 25 34 44 55 67\n(B) 5 10 6 2 -2 -6 -10 -14\n(C) 5 10 -5 15 -20 35 -55 90\n(D) 5 10 7 4 1 -2 -5 -8',
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "To analyze these sequences and determine the pattern, I'll need to use some JavaScript calculations. Let's start by evaluating the given sequences and then check the potential matches.",
          },
          {
            type: "tool_use",
            id: "toolu_01C989eoPHMGJsgA9yuWWMo6",
            name: "eval_js",
            input: {
              code: "function analyzeSequence(seq) {\n  let differences = [];\n  for (let i = 2; i < seq.length; i++) {\n    differences.push(seq[i] - seq[i-1] - seq[i-2]);\n  }\n  return differences.every(d => d === differences[0]);\n}\n\nlet seq1 = [6, 8, -2, 10, -12, 22, -34, 56];\nlet seq2 = [8, 2, 6, -4, 10, -14, 24, -38];\n\nreturn {\n  seq1Pattern: analyzeSequence(seq1),\n  seq2Pattern: analyzeSequence(seq2),\n  seq1Differences: seq1.slice(2).map((n, i) => n - seq1[i+1] - seq1[i]),\n  seq2Differences: seq2.slice(2).map((n, i) => n - seq2[i+1] - seq2[i])\n};",
            },
          },
        ],
      },
      {
        role: "user",
        content: [
          {
            type: "tool_result",
            tool_use_id: "toolu_01C989eoPHMGJsgA9yuWWMo6",
            content:
              '{"seq1Pattern":false,"seq2Pattern":false,"seq1Differences":[-16,4,-20,24,-44,68],"seq2Differences":[-4,-12,8,-20,28,-48]}',
          },
        ],
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "Based on the analysis of the given sequences, we can see that they follow a more complex pattern than initially thought. Let's examine the differences:\n\nSequence 1: -16, 4, -20, 24, -44, 68\nSequence 2: -4, -12, 8, -20, 28, -48\n\nThe pattern seems to be that each term (starting from the third) is calculated by subtracting the sum of the two preceding terms and then adding a value that follows a geometric sequence.\n\nFor Sequence 1: The added values are 16, -32, 64, -128, 256, -512 (multiplied by -1 each time and doubled in absolute value)\nFor Sequence 2: The added values are 4, -8, 16, -32, 64, -128 (same pattern as Sequence 1, but starting with 4)\n\nNow, let's check the given options to see if any of them follow this pattern:",
          },
          {
            type: "tool_use",
            id: "toolu_01LtaFHG3Ajhaoex7rYBiovy",
            name: "eval_js",
            input: {
              code: "function checkPattern(seq) {\n  let addedValues = [];\n  for (let i = 2; i < seq.length; i++) {\n    addedValues.push(seq[i] - seq[i-1] - seq[i-2]);\n  }\n  let ratio = addedValues[1] / addedValues[0];\n  return addedValues.every((v, i) => i === 0 || Math.abs(v / addedValues[i-1]) === 2);\n}\n\nlet seqA = [5, 10, 17, 25, 34, 44, 55, 67];\nlet seqB = [5, 10, 6, 2, -2, -6, -10, -14];\nlet seqC = [5, 10, -5, 15, -20, 35, -55, 90];\nlet seqD = [5, 10, 7, 4, 1, -2, -5, -8];\n\nreturn {\n  seqA: checkPattern(seqA),\n  seqB: checkPattern(seqB),\n  seqC: checkPattern(seqC),\n  seqD: checkPattern(seqD),\n  seqCDifferences: seqC.slice(2).map((n, i) => n - seqC[i+1] - seqC[i])\n};",
            },
          },
        ],
      },
      {
        role: "user",
        content: [
          {
            type: "tool_result",
            tool_use_id: "toolu_01LtaFHG3Ajhaoex7rYBiovy",
            content:
              '{"seqA":false,"seqB":false,"seqC":false,"seqD":false,"seqCDifferences":[-20,10,-30,40,-70,110]}',
          },
        ],
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "Based on the analysis, we can conclude:\n\nMATCH: C\n\nPATTERN: Each term (starting from the third) is calculated by subtracting the sum of the two preceding terms and then adding a value that follows a geometric sequence. This added value starts with 20 and is multiplied by -2 for each subsequent term (20, -40, 80, -160, 320, -640). The alternating sign creates the oscillating behavior in the sequence.\n\nLet's break down sequence C to confirm:\n\n5, 10, -5, 15, -20, 35, -55, 90\n\n1. 5 + 10 + 20 = -5\n2. 10 + (-5) - 40 = 15\n3. -5 + 15 + 80 = -20\n4. 15 + (-20) - 160 = 35\n5. -20 + 35 + 320 = -55\n6. 35 + (-55) - 640 = 90\n\nThis pattern matches the behavior we observed in the original sequences, where each term is calculated using the two preceding terms and an added value that follows a geometric sequence with a ratio of -2.",
          },
        ],
      },
    ],
    choiceIdx: 2,
    pattern:
      "Each term (starting from the third) is calculated by subtracting the sum of the two preceding terms and then adding a value that follows a geometric sequence. This added value starts with 20 and is multiplied by -2 for each subsequent term (20, -40, 80, -160, 320, -640). The alternating sign creates the oscillating behavior in the sequence.",
  },
  bob: {
    messages: [
      {
        role: "user",
        content:
          'Which one of the following sequences follows this pattern?\nThe first 2 terms of each sequence are arbitrary; the subsequent terms follow a pattern.\nWrite "MATCH: X" if (X) matches the pattern or "MATCH: NONE" if no sequences match.\n\nEach term (starting from the third) is calculated by subtracting the sum of the two preceding terms and then adding a value that follows a geometric sequence. This added value starts with 20 and is multiplied by -2 for each subsequent term (20, -40, 80, -160, 320, -640). The alternating sign creates the oscillating behavior in the sequence.\n\n(A) 5 10 17 25 34 44 55 67\n(B) 5 10 6 2 -2 -6 -10 -14\n(C) 5 10 -5 15 -20 35 -55 90\n(D) 5 10 7 4 1 -2 -5 -8',
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "To determine which sequence follows the given pattern, we need to check each sequence against the described rule. Let's break down the pattern:\n\n1. The first two terms are arbitrary.\n2. From the third term onward, each term is calculated as:\n   new_term = -(previous_term + term_before_previous) + geometric_sequence_term\n3. The geometric sequence starts with 20 and each term is multiplied by -2:\n   20, -40, 80, -160, 320, -640\n\nLet's use the eval_js function to check each sequence. We'll create a function that generates the sequence based on the given rule and compare it with the provided sequences.",
          },
          {
            type: "tool_use",
            id: "toolu_01Q2uiRG513PAime2kXehzL6",
            name: "eval_js",
            input: {
              code: "function generateSequence(a, b) {\n    let sequence = [a, b];\n    let geometricTerm = 20;\n    \n    for (let i = 2; i < 8; i++) {\n        let newTerm = -(sequence[i-1] + sequence[i-2]) + geometricTerm;\n        sequence.push(newTerm);\n        geometricTerm *= -2;\n    }\n    \n    return sequence;\n}\n\nfunction checkSequence(sequence) {\n    const generatedSequence = generateSequence(sequence[0], sequence[1]);\n    return JSON.stringify(generatedSequence) === JSON.stringify(sequence);\n}\n\nconst sequences = [\n    [5, 10, 17, 25, 34, 44, 55, 67],\n    [5, 10, 6, 2, -2, -6, -10, -14],\n    [5, 10, -5, 15, -20, 35, -55, 90],\n    [5, 10, 7, 4, 1, -2, -5, -8]\n];\n\nconst results = sequences.map(seq => checkSequence(seq));\n\nreturn results;",
            },
          },
        ],
      },
      {
        role: "user",
        content: [
          {
            type: "tool_result",
            tool_use_id: "toolu_01Q2uiRG513PAime2kXehzL6",
            content: "[false,false,false,false]",
          },
        ],
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "Based on the results of our JavaScript evaluation, none of the given sequences match the described pattern. Let's verify this manually for the first few terms of each sequence:\n\n(A) 5, 10, 17, 25, 34, ...\n    Third term should be: -(10 + 5) + 20 = 5 (doesn't match 17)\n\n(B) 5, 10, 6, 2, -2, ...\n    Third term should be: -(10 + 5) + 20 = 5 (doesn't match 6)\n\n(C) 5, 10, -5, 15, -20, ...\n    Third term should be: -(10 + 5) + 20 = 5 (doesn't match -5)\n\n(D) 5, 10, 7, 4, 1, ...\n    Third term should be: -(10 + 5) + 20 = 5 (doesn't match 7)\n\nOur manual verification confirms the JavaScript results. None of the given sequences follow the described pattern.\n\nTherefore, the answer is:\n\nMATCH: NONE\n\nNone of the provided sequences (A), (B), (C), or (D) match the pattern described in the question.",
          },
        ],
      },
    ],
    choiceIdx: null,
  },
  charlie: {
    alice: {
      messages: [
        {
          role: "user",
          content:
            'Does all of the following number sequences follow this pattern?\nThe first 2 terms of each sequence are arbitrary; the subsequent terms follow a pattern.\nWrite out your reasoning.\nAt the end, write "ANSWER: YES" or "ANSWER: NO".\n\nEach term (starting from the third) is calculated by subtracting the sum of the two preceding terms and then adding a value that follows a geometric sequence. This added value starts with 20 and is multiplied by -2 for each subsequent term (20, -40, 80, -160, 320, -640). The alternating sign creates the oscillating behavior in the sequence.\n\n6 8 -2 10 -12 22 -34 56\n8 2 6 -4 10 -14 24 -38\n5 10 -5 15 -20 35 -55 90',
        },
        {
          role: "assistant",
          content: [
            {
              type: "text",
              text: "To evaluate whether all of these number sequences follow the described pattern, let's analyze each sequence step by step. We'll use JavaScript to help us verify the calculations.\n\nLet's start by defining a function that generates the sequence based on the given rules:",
            },
            {
              type: "tool_use",
              id: "toolu_01WRWUbGBpbyBmesmULJXieJ",
              name: "eval_js",
              input: {
                code: "function generateSequence(a, b, n) {\n  let seq = [a, b];\n  let addend = 20;\n  \n  for (let i = 2; i < n; i++) {\n    let next = -(seq[i-1] + seq[i-2]) + addend;\n    seq.push(next);\n    addend *= -2;\n  }\n  \n  return seq;\n}\n\n// Test the sequences\nconst seq1 = [6, 8, -2, 10, -12, 22, -34, 56];\nconst seq2 = [8, 2, 6, -4, 10, -14, 24, -38];\nconst seq3 = [5, 10, -5, 15, -20, 35, -55, 90];\n\nconst gen1 = generateSequence(6, 8, 8);\nconst gen2 = generateSequence(8, 2, 8);\nconst gen3 = generateSequence(5, 10, 8);\n\nreturn {\n  seq1Matches: JSON.stringify(seq1) === JSON.stringify(gen1),\n  seq2Matches: JSON.stringify(seq2) === JSON.stringify(gen2),\n  seq3Matches: JSON.stringify(seq3) === JSON.stringify(gen3)\n};",
              },
            },
          ],
        },
        {
          role: "user",
          content: [
            {
              type: "tool_result",
              tool_use_id: "toolu_01WRWUbGBpbyBmesmULJXieJ",
              content: '{"seq1Matches":false,"seq2Matches":false,"seq3Matches":false}',
            },
          ],
        },
        {
          role: "assistant",
          content: [
            {
              type: "text",
              text: "Now, let's analyze each sequence:\n\n1. Sequence 1: 6, 8, -2, 10, -12, 22, -34, 56\n\nThe first two terms (6 and 8) are arbitrary as per the rule. Let's check the subsequent terms:\n- Third term: -(8 + 6) + 20 = -14 + 20 = 6 (Does not match -2)\n- Fourth term: -((-2) + 8) - 40 = -6 - 40 = -46 (Does not match 10)\n\nThis sequence does not follow the described pattern.\n\n2. Sequence 2: 8, 2, 6, -4, 10, -14, 24, -38\n\nThe first two terms (8 and 2) are arbitrary. Let's check the subsequent terms:\n- Third term: -(2 + 8) + 20 = -10 + 20 = 10 (Does not match 6)\n- Fourth term: -(6 + 2) - 40 = -8 - 40 = -48 (Does not match -4)\n\nThis sequence does not follow the described pattern.\n\n3. Sequence 3: 5, 10, -5, 15, -20, 35, -55, 90\n\nThe first two terms (5 and 10) are arbitrary. Let's check the subsequent terms:\n- Third term: -(10 + 5) + 20 = -15 + 20 = 5 (Does not match -5)\n- Fourth term: -((-5) + 10) - 40 = -5 - 40 = -45 (Does not match 15)\n\nThis sequence does not follow the described pattern.\n\nReasoning:\n1. We implemented the described pattern in a JavaScript function.\n2. We compared the generated sequences with the given sequences.\n3. None of the sequences matched the pattern generated by our function.\n4. Upon manual verification, we confirmed that the terms in each sequence do not follow the described rule.\n\nThe main discrepancies are:\n- The alternating signs of the addend (20, -40, 80, -160, etc.) do not consistently create the oscillating behavior in the given sequences.\n- The sum of the two preceding terms, when subtracted from the addend, does not produce the next term in any of the given sequences.\n\nANSWER: NO",
            },
          ],
        },
      ],
      consistent: false,
    },
    bob: null,
  },
};

const EXAMPLE_623D5: State = {
  problem: {
    hex: "623d5",
    examples: [
      [5, 1, 3, 1, 1, -1, -3, 1],
      [1, 2, 0, -2, -2, 2, -6, -14],
    ],
    correct: [4, 1, 2, 0, -2, -2, 2, -6],
    incorrects: [
      { hex: "4250b", seq: [4, 1, 3, 2, 3, 3, 4, 5] },
      { hex: "c5ef2", seq: [4, 1, -3, -7, -11, -15, -19, -23] },
      { hex: "52f42", seq: [4, 1, 3, -2, 5, -7, 12, -19] },
    ],
    correctChoiceIdx: 0,
  },

  comments: "Multiply the two last terms, then subtract 2.",
  aliceComments: `Alice says the sequence "alternates between negative and positive values," but this is obviously wrong: the first five terms of the first example are all positive!`,

  isRunning: false,
  runError: "",
  alice: {
    messages: [
      {
        role: "user",
        content:
          'Here are 2 number sequences that follow a common pattern.\nThe first 2 terms of each sequence are arbitrary; the subsequent terms follow a pattern.\n\n5 1 3 1 1 -1 -3 1\n1 2 0 -2 -2 2 -6 -14\n\nWhich one of the following sequences follows the same pattern?\nWrite "MATCH: X" if (X) matches the pattern or "MATCH: NONE" if no sequences match.\n\nAlso describe the pattern in a way that would allow someone else to identify the matching number sequence.\nWrite "PATTERN: pattern here", using as many sentences as you\'d like, but keeping it all on one line.\n\n(A) 4 1 2 0 -2 -2 2 -6\n(B) 4 1 3 2 3 3 4 5\n(C) 4 1 -3 -7 -11 -15 -19 -23\n(D) 4 1 3 -2 5 -7 12 -19',
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "To analyze these sequences and determine the pattern, I'll need to use some JavaScript code to help calculate and verify the relationships between the numbers. Let's start by evaluating the given sequences and then check the potential matches.",
          },
          {
            type: "tool_use",
            id: "toolu_01KkjysAzyCFQSsCBC3awEkU",
            name: "eval_js",
            input: {
              code: "function analyzeSequence(seq) {\n  let diffs = [];\n  for (let i = 2; i < seq.length; i++) {\n    diffs.push(seq[i] - seq[i-1] - seq[i-2]);\n  }\n  return diffs.every(diff => diff === diffs[0]);\n}\n\nlet seq1 = [5, 1, 3, 1, 1, -1, -3, 1];\nlet seq2 = [1, 2, 0, -2, -2, 2, -6, -14];\n\nlet patternMatches = analyzeSequence(seq1) && analyzeSequence(seq2);\n\nreturn {\n  seq1Pattern: patternMatches,\n  seq2Pattern: patternMatches,\n  seq1Diffs: seq1.slice(2).map((num, i) => num - seq1[i+1] - seq1[i]),\n  seq2Diffs: seq2.slice(2).map((num, i) => num - seq2[i+1] - seq2[i])\n};",
            },
          },
        ],
      },
      {
        role: "user",
        content: [
          {
            type: "tool_result",
            tool_use_id: "toolu_01KkjysAzyCFQSsCBC3awEkU",
            content:
              '{"seq1Pattern":false,"seq2Pattern":false,"seq1Diffs":[-3,-3,-3,-3,-3,5],"seq2Diffs":[-3,-4,0,6,-6,-10]}',
          },
        ],
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "Thank you for providing the evaluation results. It appears that my initial assumption about the pattern was incorrect. Let's analyze the correct pattern and then evaluate the given options.\n\nThe pattern we're looking for is more complex than initially thought. Let's describe it:\n\nPATTERN: Each term after the first two is the difference of the previous two terms subtracted from the term before that. In other words, for any term n where n > 2, the value is calculated as: term[n] = term[n-3] - term[n-2] - term[n-1].\n\nNow, let's verify this pattern for the given sequences and then check the options.",
          },
          {
            type: "tool_use",
            id: "toolu_01UNt5B9gFtAPvBBnN4kanQS",
            name: "eval_js",
            input: {
              code: "function checkPattern(seq) {\n  for (let i = 3; i < seq.length; i++) {\n    if (seq[i] !== seq[i-3] - seq[i-2] - seq[i-1]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nlet seq1 = [5, 1, 3, 1, 1, -1, -3, 1];\nlet seq2 = [1, 2, 0, -2, -2, 2, -6, -14];\n\nlet optionA = [4, 1, 2, 0, -2, -2, 2, -6];\nlet optionB = [4, 1, 3, 2, 3, 3, 4, 5];\nlet optionC = [4, 1, -3, -7, -11, -15, -19, -23];\nlet optionD = [4, 1, 3, -2, 5, -7, 12, -19];\n\nreturn {\n  seq1Matches: checkPattern(seq1),\n  seq2Matches: checkPattern(seq2),\n  optionAMatches: checkPattern(optionA),\n  optionBMatches: checkPattern(optionB),\n  optionCMatches: checkPattern(optionC),\n  optionDMatches: checkPattern(optionD)\n};",
            },
          },
        ],
      },
      {
        role: "user",
        content: [
          {
            type: "tool_result",
            tool_use_id: "toolu_01UNt5B9gFtAPvBBnN4kanQS",
            content:
              '{"seq1Matches":false,"seq2Matches":false,"optionAMatches":false,"optionBMatches":false,"optionCMatches":false,"optionDMatches":false}',
          },
        ],
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "I apologize for the confusion. It seems that the pattern is even more complex than we initially thought. Let's analyze the sequences more closely to identify the correct pattern.",
          },
          {
            type: "tool_use",
            id: "toolu_01XxExres4hTeRZKvLgDJRUE",
            name: "eval_js",
            input: {
              code: "function findPattern(seq) {\n  let diffs = [];\n  for (let i = 2; i < seq.length; i++) {\n    diffs.push(seq[i] - seq[i-1] - seq[i-2]);\n  }\n  return diffs;\n}\n\nlet seq1 = [5, 1, 3, 1, 1, -1, -3, 1];\nlet seq2 = [1, 2, 0, -2, -2, 2, -6, -14];\n\nlet optionA = [4, 1, 2, 0, -2, -2, 2, -6];\nlet optionB = [4, 1, 3, 2, 3, 3, 4, 5];\nlet optionC = [4, 1, -3, -7, -11, -15, -19, -23];\nlet optionD = [4, 1, 3, -2, 5, -7, 12, -19];\n\nreturn {\n  seq1Pattern: findPattern(seq1),\n  seq2Pattern: findPattern(seq2),\n  optionAPattern: findPattern(optionA),\n  optionBPattern: findPattern(optionB),\n  optionCPattern: findPattern(optionC),\n  optionDPattern: findPattern(optionD)\n};",
            },
          },
        ],
      },
      {
        role: "user",
        content: [
          {
            type: "tool_result",
            tool_use_id: "toolu_01XxExres4hTeRZKvLgDJRUE",
            content:
              '{"seq1Pattern":[-3,-3,-3,-3,-3,5],"seq2Pattern":[-3,-4,0,6,-6,-10],"optionAPattern":[-3,-3,-4,0,6,-6],"optionBPattern":[-2,-2,-2,-2,-2,-2],"optionCPattern":[-8,-5,-1,3,7,11],"optionDPattern":[-2,-6,4,-10,14,-24]}',
          },
        ],
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "Now that we have the correct pattern, let's analyze it:\n\nPATTERN: For each term after the first two, subtract the sum of the two preceding terms from the current term. This difference forms a sequence that alternates between negative and positive values, with the absolute value increasing by 1 each time. The pattern of differences is: -3, 3, -4, 4, -5, 5, -6, 6, and so on.\n\nLet's check which option matches this pattern:\n\n(A) 4 1 2 0 -2 -2 2 -6\n   Differences: -3, -3, -4, 0, 6, -6\n   This matches the pattern up to the 5th term, but then deviates.\n\n(B) 4 1 3 2 3 3 4 5\n   Differences: -2, -2, -2, -2, -2, -2\n   This doesn't match the pattern.\n\n(C) 4 1 -3 -7 -11 -15 -19 -23\n   Differences: -8, -5, -1, 3, 7, 11\n   This doesn't match the pattern.\n\n(D) 4 1 3 -2 5 -7 12 -19\n   Differences: -2, -6, 4, -10, 14, -24\n   This matches the pattern perfectly: -2 (instead of -3), 6, -4, 10, -5, 24 (which is 6 * 4, following the pattern).\n\nTherefore, the answer is:\n\nMATCH: D\n\nThe sequence in option D follows the same pattern as the two given sequences. The pattern alternates between negative and positive differences, with the absolute value increasing by 1 each time, starting from 2 instead of 3 in this case.",
          },
        ],
      },
    ],
    choiceIdx: 3,
    pattern:
      "For each term after the first two, subtract the sum of the two preceding terms from the current term. This difference forms a sequence that alternates between negative and positive values, with the absolute value increasing by 1 each time. The pattern of differences is: -3, 3, -4, 4, -5, 5, -6, 6, and so on.",
  },
  bob: {
    messages: [
      {
        role: "user",
        content:
          'Which one of the following sequences follows this pattern?\nThe first 2 terms of each sequence are arbitrary; the subsequent terms follow a pattern.\nWrite "MATCH: X" if (X) matches the pattern or "MATCH: NONE" if no sequences match.\n\nFor each term after the first two, subtract the sum of the two preceding terms from the current term. This difference forms a sequence that alternates between negative and positive values, with the absolute value increasing by 1 each time. The pattern of differences is: -3, 3, -4, 4, -5, 5, -6, 6, and so on.\n\n(A) 4 1 2 0 -2 -2 2 -6\n(B) 4 1 3 2 3 3 4 5\n(C) 4 1 -3 -7 -11 -15 -19 -23\n(D) 4 1 3 -2 5 -7 12 -19',
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "To solve this problem, we need to calculate the differences for each sequence and check if they match the pattern described. Let's use the JavaScript eval function to help us perform these calculations and checks.\n\nLet's start by defining a function that checks if a sequence follows the given pattern:",
          },
          {
            type: "tool_use",
            id: "toolu_01MbTGTXHbqmhGmVb2LdhASN",
            name: "eval_js",
            input: {
              code: "function checkPattern(seq) {\n    if (seq.length < 3) return false;\n    \n    let differences = [];\n    for (let i = 2; i < seq.length; i++) {\n        differences.push(seq[i] - (seq[i-1] + seq[i-2]));\n    }\n    \n    let expectedDiff = -3;\n    for (let i = 0; i < differences.length; i++) {\n        if (differences[i] !== expectedDiff) return false;\n        expectedDiff = -expectedDiff + (expectedDiff > 0 ? 1 : -1);\n    }\n    \n    return true;\n}\n\n// Check each sequence\nconst seqA = [4, 1, 2, 0, -2, -2, 2, -6];\nconst seqB = [4, 1, 3, 2, 3, 3, 4, 5];\nconst seqC = [4, 1, -3, -7, -11, -15, -19, -23];\nconst seqD = [4, 1, 3, -2, 5, -7, 12, -19];\n\nreturn [\n    checkPattern(seqA),\n    checkPattern(seqB),\n    checkPattern(seqC),\n    checkPattern(seqD)\n];",
            },
          },
        ],
      },
      {
        role: "user",
        content: [
          {
            type: "tool_result",
            tool_use_id: "toolu_01MbTGTXHbqmhGmVb2LdhASN",
            content: "[false,false,false,false]",
          },
        ],
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "Now, let's interpret the results:\n\n1. Sequence A: [4, 1, 2, 0, -2, -2, 2, -6] - Does not match the pattern\n2. Sequence B: [4, 1, 3, 2, 3, 3, 4, 5] - Does not match the pattern\n3. Sequence C: [4, 1, -3, -7, -11, -15, -19, -23] - Does not match the pattern\n4. Sequence D: [4, 1, 3, -2, 5, -7, 12, -19] - Does not match the pattern\n\nLet's verify sequence D manually, as it looks the closest to following the pattern:\n\nFor D: [4, 1, 3, -2, 5, -7, 12, -19]\nDifferences:\n3 - (4 + 1) = -2 (correct, should be -3)\n-2 - (1 + 3) = -6 (incorrect, should be 3)\n5 - (3 + -2) = 4 (incorrect, should be -4)\n-7 - (-2 + 5) = -10 (incorrect, should be 4)\n12 - (5 + -7) = 14 (incorrect, should be -5)\n-19 - (-7 + 12) = -24 (incorrect, should be 5)\n\nWhile sequence D starts with the correct first difference (-2 is close to the expected -3), it doesn't follow the pattern consistently for the subsequent terms.\n\nTherefore, the answer is:\n\nMATCH: NONE\n\nNone of the given sequences match the described pattern exactly. The pattern requires a very specific sequence of differences that alternates between negative and positive values, with the absolute value increasing by 1 each time. None of the provided sequences satisfy this condition for all terms.",
          },
        ],
      },
    ],
    choiceIdx: null,
  },
  charlie: {
    alice: {
      messages: [
        {
          role: "user",
          content:
            'Does this number sequence follow this pattern?\nThe first 2 terms of the sequence are arbitrary; the subsequent terms potentially follow the pattern.\nWrite out your reasoning.\nAt the end, write "ANSWER: YES" or "ANSWER: NO".\n\nFor each term after the first two, subtract the sum of the two preceding terms from the current term. This difference forms a sequence that alternates between negative and positive values, with the absolute value increasing by 1 each time. The pattern of differences is: -3, 3, -4, 4, -5, 5, -6, 6, and so on.\n\n4 1 3 -2 5 -7 12 -19',
        },
        {
          role: "assistant",
          content: [
            {
              type: "text",
              text: "To analyze this sequence and determine if it follows the given pattern, let's break it down step-by-step. We'll use the eval_js function to help us calculate the differences and check the pattern.",
            },
            {
              type: "tool_use",
              id: "toolu_01PY3TW7trYzxE5sKK8cnBaC",
              name: "eval_js",
              input: {
                code: "let sequence = [4, 1, 3, -2, 5, -7, 12, -19];\nlet differences = [];\n\nfor (let i = 2; i < sequence.length; i++) {\n  let diff = sequence[i] - (sequence[i-1] + sequence[i-2]);\n  differences.push(diff);\n}\n\nreturn JSON.stringify(differences);",
              },
            },
          ],
        },
        {
          role: "user",
          content: [
            {
              type: "tool_result",
              tool_use_id: "toolu_01PY3TW7trYzxE5sKK8cnBaC",
              content: '"[-2,-6,4,-10,14,-24]"',
            },
          ],
        },
        {
          role: "assistant",
          content: [
            {
              type: "text",
              text: "Now, let's analyze the results:\n\nThe given pattern states that for each term after the first two:\n1. Subtract the sum of the two preceding terms from the current term.\n2. This difference should alternate between negative and positive.\n3. The absolute value of the difference should increase by 1 each time.\n\nLooking at our calculated differences: [-2, -6, 4, -10, 14, -24]\n\nLet's check if this matches the expected pattern:\n\n1. Alternating sign: \n   Expected: -, +, -, +, -, +\n   Actual:   -, -, +, -, +, -\n   The alternating pattern is not followed correctly.\n\n2. Increasing absolute value by 1 each time:\n   Expected: 3, 3, 4, 4, 5, 5\n   Actual:   2, 6, 4, 10, 14, 24\n   The absolute values do not increase by 1 each time.\n\n3. Starting value:\n   Expected: -3\n   Actual: -2\n   The starting value is off by 1.\n\nReasoning:\nThe sequence does not follow the given pattern for several reasons:\n1. The alternating positive-negative pattern is not consistent.\n2. The absolute values of the differences do not increase by 1 each time.\n3. The starting value of the difference sequence is -2 instead of the expected -3.\n\nWhile there is some alternation between positive and negative values, and there is an increase in absolute value (though not consistently by 1), the sequence does not strictly adhere to the described pattern.\n\nANSWER: NO",
            },
          ],
        },
      ],
      consistent: false,
    },
    bob: null,
  },
};

const EXAMPLE_C50FE: State = {
  problem: {
    hex: "c50fe",
    examples: [
      [10, 11, 1, -9, -19, -29, -39, -49],
      [8, 5, -3, -11, -19, -27, -35, -43],
    ],
    correct: [6, 4, -2, -8, -14, -20, -26, -32],
    incorrects: [
      { hex: "53264", seq: [6, 4, 8, 2, 12, -4, 22, -20] },
      { hex: "1450d", seq: [6, 4, 1, 2, -2, 3, -6, 8] },
      { hex: "4e52a", seq: [6, 4, 9, 11, 17, 24, 36, 54] },
    ],
    correctChoiceIdx: 3,
  },

  comments:
    "I like this one! I wish it realized that the constant term is just the first term in the sequence, but this is impressive nonetheless.",

  isRunning: false,
  runError: "",
  alice: {
    messages: [
      {
        role: "user",
        content:
          'Here are 2 number sequences that follow a common pattern.\nThe first 2 terms of each sequence are arbitrary; the subsequent terms follow a pattern.\n\n10 11 1 -9 -19 -29 -39 -49\n8 5 -3 -11 -19 -27 -35 -43\n\nWhich one of the following sequences follows the same pattern?\nWrite "MATCH: X" if (X) matches the pattern or "MATCH: NONE" if no sequences match.\n\nAlso describe the pattern in a way that would allow someone else to identify the matching number sequence.\nWrite "PATTERN: pattern here", using as many sentences as you\'d like, but keeping it all on one line.\n\n(A) 6 4 8 2 12 -4 22 -20\n(B) 6 4 1 2 -2 3 -6 8\n(C) 6 4 9 11 17 24 36 54\n(D) 6 4 -2 -8 -14 -20 -26 -32',
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "To analyze these sequences and determine if any of the given options match the pattern, we'll need to evaluate the differences between consecutive terms. Let's use the JavaScript eval function to help us calculate these differences.",
          },
          {
            type: "tool_use",
            id: "toolu_01KFVdDCwqrTDt9LgXsXshvG",
            name: "eval_js",
            input: {
              code: "function getDifferences(seq) {\n  return seq.slice(1).map((num, i) => num - seq[i]);\n}\n\nconst seq1 = [10, 11, 1, -9, -19, -29, -39, -49];\nconst seq2 = [8, 5, -3, -11, -19, -27, -35, -43];\nconst seqA = [6, 4, 8, 2, 12, -4, 22, -20];\nconst seqB = [6, 4, 1, 2, -2, 3, -6, 8];\nconst seqC = [6, 4, 9, 11, 17, 24, 36, 54];\nconst seqD = [6, 4, -2, -8, -14, -20, -26, -32];\n\nconst diff1 = getDifferences(seq1);\nconst diff2 = getDifferences(seq2);\nconst diffA = getDifferences(seqA);\nconst diffB = getDifferences(seqB);\nconst diffC = getDifferences(seqC);\nconst diffD = getDifferences(seqD);\n\nreturn {\n  diff1,\n  diff2,\n  diffA,\n  diffB,\n  diffC,\n  diffD\n};",
            },
          },
        ],
      },
      {
        role: "user",
        content: [
          {
            type: "tool_result",
            tool_use_id: "toolu_01KFVdDCwqrTDt9LgXsXshvG",
            content:
              '{"diff1":[1,-10,-10,-10,-10,-10,-10],"diff2":[-3,-8,-8,-8,-8,-8,-8],"diffA":[-2,4,-6,10,-16,26,-42],"diffB":[-2,-3,1,-4,5,-9,14],"diffC":[-2,5,2,6,7,12,18],"diffD":[-2,-6,-6,-6,-6,-6,-6]}',
          },
        ],
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "Now, let's analyze the results:\n\n1. For the first sequence (10, 11, 1, -9, -19, -29, -39, -49):\n   The differences are [1, -10, -10, -10, -10, -10, -10]\n\n2. For the second sequence (8, 5, -3, -11, -19, -27, -35, -43):\n   The differences are [-3, -8, -8, -8, -8, -8, -8]\n\nWe can see that in both sequences, after the first two terms, the difference between consecutive terms becomes constant. For the first sequence, it's -10, and for the second sequence, it's -8.\n\nNow, let's check the given options:\n\nA: [6, 4, 8, 2, 12, -4, 22, -20]\n   Differences: [-2, 4, -6, 10, -16, 26, -42]\n   This doesn't follow the pattern.\n\nB: [6, 4, 1, 2, -2, 3, -6, 8]\n   Differences: [-2, -3, 1, -4, 5, -9, 14]\n   This doesn't follow the pattern.\n\nC: [6, 4, 9, 11, 17, 24, 36, 54]\n   Differences: [-2, 5, 2, 6, 7, 12, 18]\n   This doesn't follow the pattern.\n\nD: [6, 4, -2, -8, -14, -20, -26, -32]\n   Differences: [-2, -6, -6, -6, -6, -6, -6]\n   This follows the pattern!\n\nMATCH: D\n\nPATTERN: The pattern is that after the first two terms (which are arbitrary), each subsequent term is obtained by subtracting a constant value from the previous term. This constant difference is maintained throughout the rest of the sequence. In other words, starting from the third term, the sequence forms an arithmetic progression with a negative common difference.",
          },
        ],
      },
    ],
    choiceIdx: 3,
    pattern:
      "The pattern is that after the first two terms (which are arbitrary), each subsequent term is obtained by subtracting a constant value from the previous term. This constant difference is maintained throughout the rest of the sequence. In other words, starting from the third term, the sequence forms an arithmetic progression with a negative common difference.",
  },
  bob: {
    messages: [
      {
        role: "user",
        content:
          'Which one of the following sequences follows this pattern?\nThe first 2 terms of each sequence are arbitrary; the subsequent terms follow a pattern.\nWrite "MATCH: X" if (X) matches the pattern or "MATCH: NONE" if no sequences match.\n\nThe pattern is that after the first two terms (which are arbitrary), each subsequent term is obtained by subtracting a constant value from the previous term. This constant difference is maintained throughout the rest of the sequence. In other words, starting from the third term, the sequence forms an arithmetic progression with a negative common difference.\n\n(A) 6 4 8 2 12 -4 22 -20\n(B) 6 4 1 2 -2 3 -6 8\n(C) 6 4 9 11 17 24 36 54\n(D) 6 4 -2 -8 -14 -20 -26 -32',
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "To determine which sequence follows the pattern described, we need to analyze each sequence starting from the third term. Let's evaluate them one by one using JavaScript to calculate the differences between consecutive terms.",
          },
          {
            type: "tool_use",
            id: "toolu_012wrgmU2LwvsMFaW2MKFhMH",
            name: "eval_js",
            input: {
              code: "function checkSequence(seq) {\n    let differences = [];\n    for (let i = 2; i < seq.length - 1; i++) {\n        differences.push(seq[i+1] - seq[i]);\n    }\n    return differences.every(diff => diff === differences[0]);\n}\n\nlet sequences = [\n    [6, 4, 8, 2, 12, -4, 22, -20],\n    [6, 4, 1, 2, -2, 3, -6, 8],\n    [6, 4, 9, 11, 17, 24, 36, 54],\n    [6, 4, -2, -8, -14, -20, -26, -32]\n];\n\nlet results = sequences.map(checkSequence);\n\nreturn results;",
            },
          },
        ],
      },
      {
        role: "user",
        content: [
          {
            type: "tool_result",
            tool_use_id: "toolu_012wrgmU2LwvsMFaW2MKFhMH",
            content: "[false,false,false,true]",
          },
        ],
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "Now, let's interpret the results:\n\n(A) [6, 4, 8, 2, 12, -4, 22, -20]: The result is false. This sequence does not follow a consistent pattern of subtracting a constant value.\n\n(B) [6, 4, 1, 2, -2, 3, -6, 8]: The result is false. This sequence does not follow a consistent pattern of subtracting a constant value.\n\n(C) [6, 4, 9, 11, 17, 24, 36, 54]: The result is false. This sequence actually increases with each term after the third term, rather than decreasing.\n\n(D) [6, 4, -2, -8, -14, -20, -26, -32]: The result is true. This sequence follows the pattern described.\n\nLet's verify sequence D manually:\n6, 4 (arbitrary first two terms)\n-2 (4 - 6 = -6)\n-8 (-2 - 6 = -8)\n-14 (-8 - 6 = -14)\n-20 (-14 - 6 = -20)\n-26 (-20 - 6 = -26)\n-32 (-26 - 6 = -32)\n\nWe can see that starting from the third term, each subsequent term is obtained by subtracting 6 from the previous term, forming an arithmetic progression with a negative common difference of -6.\n\nTherefore, the answer is:\n\nMATCH: D\n\nSequence D [6, 4, -2, -8, -14, -20, -26, -32] matches the pattern where, after the first two arbitrary terms, each subsequent term is obtained by subtracting a constant value (in this case, 6) from the previous term.",
          },
        ],
      },
    ],
    choiceIdx: 3,
  },
  charlie: {
    alice: {
      messages: [
        {
          role: "user",
          content:
            'Does all of the following number sequences follow this pattern?\nThe first 2 terms of each sequence are arbitrary; the subsequent terms follow a pattern.\nWrite out your reasoning.\nAt the end, write "ANSWER: YES" or "ANSWER: NO".\n\nThe pattern is that after the first two terms (which are arbitrary), each subsequent term is obtained by subtracting a constant value from the previous term. This constant difference is maintained throughout the rest of the sequence. In other words, starting from the third term, the sequence forms an arithmetic progression with a negative common difference.\n\n10 11 1 -9 -19 -29 -39 -49\n8 5 -3 -11 -19 -27 -35 -43\n6 4 -2 -8 -14 -20 -26 -32',
        },
        {
          role: "assistant",
          content: [
            {
              type: "text",
              text: "To determine if all the given number sequences follow the described pattern, let's analyze each sequence individually:\n\n1. Sequence: 10 11 1 -9 -19 -29 -39 -49\n\nLet's examine this sequence:\n- The first two terms (10 and 11) are arbitrary, as per the pattern description.\n- Starting from the third term, let's check the differences:\n  11 to 1: -10\n  1 to -9: -10\n  -9 to -19: -10\n  -19 to -29: -10\n  -29 to -39: -10\n  -39 to -49: -10\n\nThis sequence follows the pattern. After the first two arbitrary terms, each subsequent term is obtained by subtracting 10 from the previous term.\n\n2. Sequence: 8 5 -3 -11 -19 -27 -35 -43\n\nLet's examine this sequence:\n- The first two terms (8 and 5) are arbitrary, as per the pattern description.\n- Starting from the third term, let's check the differences:\n  5 to -3: -8\n  -3 to -11: -8\n  -11 to -19: -8\n  -19 to -27: -8\n  -27 to -35: -8\n  -35 to -43: -8\n\nThis sequence also follows the pattern. After the first two arbitrary terms, each subsequent term is obtained by subtracting 8 from the previous term.\n\n3. Sequence: 6 4 -2 -8 -14 -20 -26 -32\n\nLet's examine this sequence:\n- The first two terms (6 and 4) are arbitrary, as per the pattern description.\n- Starting from the third term, let's check the differences:\n  4 to -2: -6\n  -2 to -8: -6\n  -8 to -14: -6\n  -14 to -20: -6\n  -20 to -26: -6\n  -26 to -32: -6\n\nThis sequence also follows the pattern. After the first two arbitrary terms, each subsequent term is obtained by subtracting 6 from the previous term.\n\nReasoning:\nAll three sequences satisfy the given pattern:\n1. The first two terms in each sequence are arbitrary.\n2. Starting from the third term, each subsequent term is obtained by subtracting a constant value from the previous term.\n3. This constant difference is maintained throughout the rest of each sequence.\n4. Each sequence forms an arithmetic progression with a negative common difference after the first two terms.\n\nANSWER: YES",
            },
          ],
        },
      ],
      consistent: true,
    },
    bob: {
      messages: [
        {
          role: "user",
          content:
            'Does all of the following number sequences follow this pattern?\nThe first 2 terms of each sequence are arbitrary; the subsequent terms follow a pattern.\nWrite out your reasoning.\nAt the end, write "ANSWER: YES" or "ANSWER: NO".\n\nThe pattern is that after the first two terms (which are arbitrary), each subsequent term is obtained by subtracting a constant value from the previous term. This constant difference is maintained throughout the rest of the sequence. In other words, starting from the third term, the sequence forms an arithmetic progression with a negative common difference.\n\n10 11 1 -9 -19 -29 -39 -49\n8 5 -3 -11 -19 -27 -35 -43\n6 4 -2 -8 -14 -20 -26 -32',
        },
        {
          role: "assistant",
          content: [
            {
              type: "text",
              text: "To determine if all the given number sequences follow the described pattern, let's analyze each sequence individually:\n\n1. 10 11 1 -9 -19 -29 -39 -49\n\nLet's check if this sequence follows the pattern:\n- The first two terms (10 and 11) are arbitrary, as per the rule.\n- Starting from the third term, let's calculate the differences:\n  11 to 1: -10\n  1 to -9: -10\n  -9 to -19: -10\n  -19 to -29: -10\n  -29 to -39: -10\n  -39 to -49: -10\n\nThis sequence does follow the pattern. After the first two arbitrary terms, each subsequent term is obtained by subtracting 10 from the previous term.\n\n2. 8 5 -3 -11 -19 -27 -35 -43\n\nLet's analyze this sequence:\n- The first two terms (8 and 5) are arbitrary, as per the rule.\n- Starting from the third term, let's calculate the differences:\n  5 to -3: -8\n  -3 to -11: -8\n  -11 to -19: -8\n  -19 to -27: -8\n  -27 to -35: -8\n  -35 to -43: -8\n\nThis sequence also follows the pattern. After the first two arbitrary terms, each subsequent term is obtained by subtracting 8 from the previous term.\n\n3. 6 4 -2 -8 -14 -20 -26 -32\n\nLet's examine this sequence:\n- The first two terms (6 and 4) are arbitrary, as per the rule.\n- Starting from the third term, let's calculate the differences:\n  4 to -2: -6\n  -2 to -8: -6\n  -8 to -14: -6\n  -14 to -20: -6\n  -20 to -26: -6\n  -26 to -32: -6\n\nThis sequence also follows the pattern. After the first two arbitrary terms, each subsequent term is obtained by subtracting 6 from the previous term.\n\nReasoning:\nAll three sequences satisfy the given pattern:\n1. The first two terms in each sequence are arbitrary.\n2. Starting from the third term, each subsequent term is obtained by subtracting a constant value from the previous term.\n3. This constant difference is maintained throughout the rest of each sequence.\n4. Each sequence forms an arithmetic progression with a negative common difference after the first two terms.\n\nANSWER: YES",
            },
          ],
        },
      ],
      consistent: true,
    },
  },
};

const EXAMPLE_C6DE6: State = {
  problem: {
    hex: "c6de6",
    examples: [
      [3, 1, 3, 2, 9, 8, 45, 48],
      [1, 3, 3, 6, 9, 24, 45, 144],
    ],
    correct: [2, 3, 6, 6, 18, 24, 90, 144],
    incorrects: [
      { hex: "9ec65", seq: [2, 3, -3, -11, -21, -33, -47, -63] },
      { hex: "c424f", seq: [2, 3, 7, 11, 15, 19, 23, 27] },
      { hex: "41a16", seq: [2, 3, 5, 8, 13, 21, 34, 55] },
    ],
    correctChoiceIdx: 1,
  },
  isRunning: false,
  runError: "",
  alice: {
    messages: [
      {
        role: "user",
        content:
          'Here are 2 number sequences that follow a common pattern.\nThe first 2 terms of each sequence are arbitrary; the subsequent terms follow a pattern.\n\n3 1 3 2 9 8 45 48\n1 3 3 6 9 24 45 144\n\nWhich one of the following sequences follows the same pattern?\nWrite "MATCH: X" if (X) matches the pattern or "MATCH: NONE" if no sequences match.\n\nAlso describe the pattern in a way that would allow someone else to identify the matching number sequence.\nWrite "PATTERN: pattern here", using as many sentences as you\'d like, but keeping it all on one line.\n\n(A) 2 3 -3 -11 -21 -33 -47 -63\n(B) 2 3 6 6 18 24 90 144\n(C) 2 3 7 11 15 19 23 27\n(D) 2 3 5 8 13 21 34 55',
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "To analyze these sequences and determine the pattern, I'll need to use some JavaScript code to help with the calculations. Let's evaluate the given sequences and the potential matches.",
          },
          {
            type: "tool_use",
            id: "toolu_01Ff2S7fUyUcbSnPwxsb88uD",
            name: "eval_js",
            input: {
              code: "function analyzeSequence(seq) {\n    let ratios = [];\n    for (let i = 2; i < seq.length; i++) {\n        ratios.push(seq[i] / (seq[i-1] * seq[i-2]));\n    }\n    return ratios.every(r => Math.abs(r - ratios[0]) < 0.0001);\n}\n\nlet seq1 = [3, 1, 3, 2, 9, 8, 45, 48];\nlet seq2 = [1, 3, 3, 6, 9, 24, 45, 144];\n\nlet seqA = [2, 3, -3, -11, -21, -33, -47, -63];\nlet seqB = [2, 3, 6, 6, 18, 24, 90, 144];\nlet seqC = [2, 3, 7, 11, 15, 19, 23, 27];\nlet seqD = [2, 3, 5, 8, 13, 21, 34, 55];\n\nreturn {\n    seq1: analyzeSequence(seq1),\n    seq2: analyzeSequence(seq2),\n    seqA: analyzeSequence(seqA),\n    seqB: analyzeSequence(seqB),\n    seqC: analyzeSequence(seqC),\n    seqD: analyzeSequence(seqD)\n};",
            },
          },
        ],
      },
      {
        role: "user",
        content: [
          {
            type: "tool_result",
            tool_use_id: "toolu_01Ff2S7fUyUcbSnPwxsb88uD",
            content:
              '{"seq1":false,"seq2":false,"seqA":false,"seqB":false,"seqC":false,"seqD":false}',
          },
        ],
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "The JavaScript function I used to analyze the sequences didn't identify the pattern correctly. This means the pattern is more complex than I initially thought. Let's analyze the sequences manually to identify the correct pattern.\n\nAfter careful analysis, I've identified the pattern:\n\nPATTERN: For each sequence, starting from the third term, each number is the sum of the product of the two preceding terms and a constant. This constant is unique to each sequence but remains the same throughout that sequence. For the given sequences, the constants are 1 and 2 respectively.\n\nLet's verify this for the given sequences:\n\n1. 3, 1, 3, 2, 9, 8, 45, 48\n   Constant = 1\n   3 = 3 * 1 + 1\n   2 = 3 * 1 + (-1)\n   9 = 3 * 2 + 1\n   8 = 2 * 9 + (-10)\n   45 = 9 * 8 + (-27)\n   48 = 8 * 45 + (-312)\n\n2. 1, 3, 3, 6, 9, 24, 45, 144\n   Constant = 2\n   3 = 1 * 3 + 0\n   6 = 3 * 3 + (-3)\n   9 = 3 * 6 + (-9)\n   24 = 6 * 9 + (-30)\n   45 = 9 * 24 + (-171)\n   144 = 24 * 45 + (-936)\n\nNow, let's check the given options:\n\n(A) 2, 3, -3, -11, -21, -33, -47, -63\n   This doesn't follow the pattern.\n\n(B) 2, 3, 6, 6, 18, 24, 90, 144\n   Constant = 0\n   6 = 2 * 3 + 0\n   6 = 3 * 6 + (-12)\n   18 = 6 * 6 + (-18)\n   24 = 6 * 18 + (-84)\n   90 = 18 * 24 + (-342)\n   144 = 24 * 90 + (-2016)\n   This sequence follows the pattern with a constant of 0.\n\n(C) 2, 3, 7, 11, 15, 19, 23, 27\n   This doesn't follow the pattern.\n\n(D) 2, 3, 5, 8, 13, 21, 34, 55\n   This doesn't follow the pattern.\n\nTherefore, the answer is:\n\nMATCH: B\n\nThe sequence in option B follows the same pattern as the given sequences, with a constant of 0. The other options do not follow this pattern.",
          },
        ],
      },
    ],
    choiceIdx: 1,
    pattern:
      "For each sequence, starting from the third term, each number is the sum of the product of the two preceding terms and a constant. This constant is unique to each sequence but remains the same throughout that sequence. For the given sequences, the constants are 1 and 2 respectively.",
  },
  bob: {
    messages: [
      {
        role: "user",
        content:
          'Which one of the following sequences follows this pattern?\nThe first 2 terms of each sequence are arbitrary; the subsequent terms follow a pattern.\nWrite "MATCH: X" if (X) matches the pattern or "MATCH: NONE" if no sequences match.\n\nFor each sequence, starting from the third term, each number is the sum of the product of the two preceding terms and a constant. This constant is unique to each sequence but remains the same throughout that sequence. For the given sequences, the constants are 1 and 2 respectively.\n\n(A) 2 3 -3 -11 -21 -33 -47 -63\n(B) 2 3 6 6 18 24 90 144\n(C) 2 3 7 11 15 19 23 27\n(D) 2 3 5 8 13 21 34 55',
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "To determine which sequence follows the described pattern, we need to check each sequence starting from the third term. Let's use the JavaScript eval function to help us calculate and verify the pattern for each sequence.\n\nLet's start by creating a function to check the pattern:",
          },
          {
            type: "tool_use",
            id: "toolu_01KVhR4XteWLfBD9bvFuUrAC",
            name: "eval_js",
            input: {
              code: "function checkPattern(seq, constant) {\n    for (let i = 2; i < seq.length; i++) {\n        if (seq[i] !== seq[i-1] * seq[i-2] * constant + seq[i-1]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nlet sequences = [\n    [2, 3, -3, -11, -21, -33, -47, -63],\n    [2, 3, 6, 6, 18, 24, 90, 144],\n    [2, 3, 7, 11, 15, 19, 23, 27],\n    [2, 3, 5, 8, 13, 21, 34, 55]\n];\n\nlet results = sequences.map((seq, index) => {\n    let letter = String.fromCharCode(65 + index);\n    return `${letter}: ${checkPattern(seq, 1) || checkPattern(seq, 2)}`;\n});\n\nreturn results;",
            },
          },
        ],
      },
      {
        role: "user",
        content: [
          {
            type: "tool_result",
            tool_use_id: "toolu_01KVhR4XteWLfBD9bvFuUrAC",
            content: '["A: false","B: false","C: false","D: false"]',
          },
        ],
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "Based on the results, none of the sequences match the described pattern exactly. Let's verify this manually for sequence (B), which seems closest to the pattern:",
          },
          {
            type: "tool_use",
            id: "toolu_013sAHzkiz5bFGyNVLbA2iUo",
            name: "eval_js",
            input: {
              code: "let seq = [2, 3, 6, 6, 18, 24, 90, 144];\nlet results = [];\nfor (let i = 2; i < seq.length; i++) {\n    let expected1 = seq[i-1] * seq[i-2] * 1 + seq[i-1];\n    let expected2 = seq[i-1] * seq[i-2] * 2 + seq[i-1];\n    results.push(`Term ${i+1}: ${seq[i]} (Expected: ${expected1} or ${expected2})`);\n}\nreturn results;",
            },
          },
        ],
      },
      {
        role: "user",
        content: [
          {
            type: "tool_result",
            tool_use_id: "toolu_013sAHzkiz5bFGyNVLbA2iUo",
            content:
              '["Term 3: 6 (Expected: 9 or 15)","Term 4: 6 (Expected: 24 or 42)","Term 5: 18 (Expected: 42 or 78)","Term 6: 24 (Expected: 126 or 234)","Term 7: 90 (Expected: 456 or 888)","Term 8: 144 (Expected: 2250 or 4410)"]',
          },
        ],
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "After verifying the calculations, we can confirm that none of the sequences match the described pattern exactly. \n\nTherefore, the answer is:\n\nMATCH: NONE\n\nNone of the given sequences perfectly follow the pattern where, starting from the third term, each number is the sum of the product of the two preceding terms and a constant (either 1 or 2).",
          },
        ],
      },
    ],
    choiceIdx: null,
  },
  charlie: {
    alice: {
      messages: [
        {
          role: "user",
          content:
            'Does this number sequence follow this pattern?\nThe first 2 terms of the sequence are arbitrary; the subsequent terms potentially follow the pattern.\nWrite out your reasoning.\nAt the end, write "ANSWER: YES" or "ANSWER: NO".\n\nFor each sequence, starting from the third term, each number is the sum of the product of the two preceding terms and a constant. This constant is unique to each sequence but remains the same throughout that sequence. For the given sequences, the constants are 1 and 2 respectively.\n\n2 3 6 6 18 24 90 144',
        },
        {
          role: "assistant",
          content: [
            {
              type: "text",
              text: "To determine if the given number sequence follows the described pattern, let's analyze it step by step. We'll start from the third term and check if each subsequent term follows the rule.\n\nThe pattern states that for each term starting from the third, the number should be the sum of the product of the two preceding terms and a constant. The constant should remain the same throughout the sequence.\n\nLet's check each term:\n\n1. First two terms: 2 and 3 (arbitrary as per the rule)\n\n2. Third term: 6\n   Check: (2 * 3) + constant = 6\n   6 = 6 + constant\n   constant = 0\n\n3. Fourth term: 6\n   Check: (3 * 6) + 0 = 18\n   But the actual term is 6, which doesn't match.\n\nAt this point, we can already conclude that the sequence doesn't follow the described pattern. However, let's continue the analysis for completeness:\n\n4. Fifth term: 18\n   Check: (6 * 6) + 0 = 36\n   But the actual term is 18, which doesn't match.\n\n5. Sixth term: 24\n   Check: (6 * 18) + 0 = 108\n   But the actual term is 24, which doesn't match.\n\n6. Seventh term: 90\n   Check: (18 * 24) + 0 = 432\n   But the actual term is 90, which doesn't match.\n\n7. Eighth term: 144\n   Check: (24 * 90) + 0 = 2160\n   But the actual term is 144, which doesn't match.\n\nReasoning:\n1. The sequence fails to follow the described pattern starting from the fourth term.\n2. There is no constant value that can be added to make the pattern work consistently throughout the sequence.\n3. The terms seem to follow some other pattern or might be arbitrary.\n\nANSWER: NO",
            },
          ],
        },
      ],
      consistent: false,
    },
    bob: null,
  },
};

const EXAMPLE_6EC4F: State = {
  problem: {
    hex: "6ec4f",
    examples: [
      [10, 10, 101, 12, 13, 14, 15, 16],
      [3, 11, 34, 5, 6, 7, 8, 9],
    ],
    correct: [5, 9, 46, 7, 8, 9, 10, 11],
    incorrects: [
      { hex: "52e54", seq: [5, 9, -4, 12, -18, 27, -49, 71] },
      { hex: "13445", seq: [5, 9, -8, 13, -25, 34, -63, 93] },
      { hex: "10d55", seq: [5, 9, -3, 13, -15, 29, -43, 73] },
    ],
    correctChoiceIdx: 3,
  },

  comments:
    "The behavior of the program differs depending on the size of the stack. Click [expand] next to the analysis to show the symbolic execution trace. When the stack has more than two values, b₀ is the first element. When the stack has two values, b₀ is t₁ t₀ *. Unfortunately, the analysis currently assumes the size of the stack is unknown, so we conservatively drop the t₁ t₀ * symbolic expression after the rot.",

  isRunning: false,
  runError: "",
  alice: {
    messages: [
      {
        role: "user",
        content:
          'Here are 2 number sequences that follow a common pattern.\nThe first 2 terms of each sequence are arbitrary; the subsequent terms follow a pattern.\n\n10 10 101 12 13 14 15 16\n3 11 34 5 6 7 8 9\n\nWhich one of the following sequences follows the same pattern?\nWrite "MATCH: X" if (X) matches the pattern or "MATCH: NONE" if no sequences match.\n\nAlso describe the pattern in a way that would allow someone else to identify the matching number sequence.\nWrite "PATTERN: pattern here", using as many sentences as you\'d like, but keeping it all on one line.\n\n(A) 5 9 -4 12 -18 27 -49 71\n(B) 5 9 -8 13 -25 34 -63 93\n(C) 5 9 -3 13 -15 29 -43 73\n(D) 5 9 46 7 8 9 10 11',
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "To analyze these sequences and determine if any of the given options follow the same pattern, I'll need to evaluate the pattern in the original sequences and then compare it with the given options. Let's use the JavaScript evaluation function to help us with this task.\n\nFirst, let's analyze the original sequences:",
          },
          {
            type: "tool_use",
            id: "toolu_01HwwzSnYnv7S9fuQpwaMzYS",
            name: "eval_js",
            input: {
              code: 'function analyzeSequence(seq) {\n  let diffs = [];\n  for (let i = 2; i < seq.length; i++) {\n    diffs.push(seq[i] - seq[i-1]);\n  }\n  return diffs;\n}\n\nlet seq1 = [10, 10, 101, 12, 13, 14, 15, 16];\nlet seq2 = [3, 11, 34, 5, 6, 7, 8, 9];\n\nreturn {\n  "seq1_diffs": analyzeSequence(seq1),\n  "seq2_diffs": analyzeSequence(seq2)\n};',
            },
          },
        ],
      },
      {
        role: "user",
        content: [
          {
            type: "tool_result",
            tool_use_id: "toolu_01HwwzSnYnv7S9fuQpwaMzYS",
            content: '{"seq1_diffs":[91,-89,1,1,1,1],"seq2_diffs":[23,-29,1,1,1,1]}',
          },
        ],
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "Now that we have analyzed the original sequences, we can see the pattern:\n1. The first two terms are arbitrary.\n2. The third term is calculated using some operation on the first two terms.\n3. The fourth term is the difference between the second and third terms.\n4. From the fifth term onwards, each term increases by 1.\n\nLet's check each of the given options to see if they follow this pattern:",
          },
          {
            type: "tool_use",
            id: "toolu_01MNyrxZxXam4iHPg3LTsEU5",
            name: "eval_js",
            input: {
              code: 'function checkPattern(seq) {\n  let diffs = [];\n  for (let i = 2; i < seq.length; i++) {\n    diffs.push(seq[i] - seq[i-1]);\n  }\n  \n  // Check if from the 5th term onwards, each term increases by 1\n  let increasesBy1 = diffs.slice(3).every(diff => diff === 1);\n  \n  // Check if the 4th term is the difference between the 2nd and 3rd terms\n  let fourthTermCorrect = seq[3] === seq[1] - seq[2];\n  \n  return increasesBy1 && fourthTermCorrect;\n}\n\nlet seqA = [5, 9, -4, 12, -18, 27, -49, 71];\nlet seqB = [5, 9, -8, 13, -25, 34, -63, 93];\nlet seqC = [5, 9, -3, 13, -15, 29, -43, 73];\nlet seqD = [5, 9, 46, 7, 8, 9, 10, 11];\n\nreturn {\n  "A_matches": checkPattern(seqA),\n  "B_matches": checkPattern(seqB),\n  "C_matches": checkPattern(seqC),\n  "D_matches": checkPattern(seqD)\n};',
            },
          },
        ],
      },
      {
        role: "user",
        content: [
          {
            type: "tool_result",
            tool_use_id: "toolu_01MNyrxZxXam4iHPg3LTsEU5",
            content: '{"A_matches":false,"B_matches":false,"C_matches":false,"D_matches":false}',
          },
        ],
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "Based on our analysis, we can conclude:\n\nMATCH: NONE\n\nNone of the given sequences (A), (B), (C), or (D) match the pattern observed in the original sequences.\n\nPATTERN: The pattern consists of arbitrary first two terms, followed by a third term calculated using some operation on the first two terms. The fourth term is the difference between the second and third terms. From the fifth term onwards, each term increases by 1.\n\nTo elaborate on why none of the sequences match:\n\n1. Sequence (A) and (B): These don't follow the pattern of increasing by 1 from the 5th term onwards.\n2. Sequence (C): While it seems to increase by 1 from the 5th term onwards, the 4th term (13) is not the difference between the 2nd and 3rd terms (9 - (-3) = 12).\n3. Sequence (D): While it increases by 1 from the 5th term onwards, the 4th term (7) is not the difference between the 2nd and 3rd terms (9 - 46 = -37).\n\nThe key to identifying a matching sequence would be to check these specific conditions:\n1. The first two terms can be any numbers.\n2. The fourth term must be the result of subtracting the third term from the second term.\n3. Starting from the fifth term, each subsequent term should increase by exactly 1.",
          },
        ],
      },
    ],
    choiceIdx: null,
    pattern:
      "The pattern consists of arbitrary first two terms, followed by a third term calculated using some operation on the first two terms. The fourth term is the difference between the second and third terms. From the fifth term onwards, each term increases by 1.",
  },
  bob: {
    messages: [
      {
        role: "user",
        content:
          'Which one of the following sequences follows this pattern?\nThe first 2 terms of each sequence are arbitrary; the subsequent terms follow a pattern.\nWrite "MATCH: X" if (X) matches the pattern or "MATCH: NONE" if no sequences match.\n\nThe pattern consists of arbitrary first two terms, followed by a third term calculated using some operation on the first two terms. The fourth term is the difference between the second and third terms. From the fifth term onwards, each term increases by 1.\n\n(A) 5 9 -4 12 -18 27 -49 71\n(B) 5 9 -8 13 -25 34 -63 93\n(C) 5 9 -3 13 -15 29 -43 73\n(D) 5 9 46 7 8 9 10 11',
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "To determine which sequence matches the given pattern, let's analyze each option step by step. We'll use the JavaScript eval function to help us verify our calculations.\n\nLet's break down the pattern:\n1. First two terms are arbitrary\n2. Third term is calculated using some operation on the first two terms\n3. Fourth term is the difference between the second and third terms\n4. From the fifth term onwards, each term increases by 1\n\nNow, let's examine each sequence:\n\n(A) 5 9 -4 12 -18 27 -49 71\n\nLet's check if this follows the pattern:\n1. First two terms (5, 9) are arbitrary - OK\n2. Third term (-4): Let's check if it's an operation on 5 and 9\n3. Fourth term (12): Is it the difference between 9 and -4?\n4. Fifth term onwards: Do they increase by 1?\n\nLet's verify the fourth term calculation:",
          },
          {
            type: "tool_use",
            id: "toolu_013T14r9iQYKJD2zJXqWKuaE",
            name: "eval_js",
            input: { code: "return 9 - (-4);" },
          },
        ],
      },
      {
        role: "user",
        content: [
          { type: "tool_result", tool_use_id: "toolu_013T14r9iQYKJD2zJXqWKuaE", content: "13" },
        ],
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "The result is 13, not 12, so this sequence doesn't match the pattern.\n\n(B) 5 9 -8 13 -25 34 -63 93\n\nLet's check this sequence:\n1. First two terms (5, 9) are arbitrary - OK\n2. Third term (-8): Let's assume it's a valid operation on 5 and 9\n3. Fourth term (13): Is it the difference between 9 and -8?\n4. Fifth term onwards: Do they increase by 1?\n\nLet's verify the fourth term calculation:",
          },
          {
            type: "tool_use",
            id: "toolu_01FV6BiapWrJgRK41nF8enem",
            name: "eval_js",
            input: { code: "return 9 - (-8);" },
          },
        ],
      },
      {
        role: "user",
        content: [
          { type: "tool_result", tool_use_id: "toolu_01FV6BiapWrJgRK41nF8enem", content: "17" },
        ],
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "The result is 17, not 13, so this sequence doesn't match the pattern either.\n\n(C) 5 9 -3 13 -15 29 -43 73\n\nLet's check this sequence:\n1. First two terms (5, 9) are arbitrary - OK\n2. Third term (-3): Let's assume it's a valid operation on 5 and 9\n3. Fourth term (13): Is it the difference between 9 and -3?\n4. Fifth term onwards: Do they increase by 1?\n\nLet's verify the fourth term calculation:",
          },
          {
            type: "tool_use",
            id: "toolu_01NJHUDMPquunSXg1jCAN4da",
            name: "eval_js",
            input: { code: "return 9 - (-3);" },
          },
        ],
      },
      {
        role: "user",
        content: [
          { type: "tool_result", tool_use_id: "toolu_01NJHUDMPquunSXg1jCAN4da", content: "12" },
        ],
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "The result is 12, which is not equal to 13, so this sequence doesn't match the pattern.\n\n(D) 5 9 46 7 8 9 10 11\n\nLet's check this sequence:\n1. First two terms (5, 9) are arbitrary - OK\n2. Third term (46): Let's assume it's a valid operation on 5 and 9\n3. Fourth term (7): Is it the difference between 9 and 46?\n4. Fifth term onwards: Do they increase by 1?\n\nLet's verify the fourth term calculation:",
          },
          {
            type: "tool_use",
            id: "toolu_01CtwaUsZsNq5sDXi813GcxV",
            name: "eval_js",
            input: { code: "return 9 - 46;" },
          },
        ],
      },
      {
        role: "user",
        content: [
          { type: "tool_result", tool_use_id: "toolu_01CtwaUsZsNq5sDXi813GcxV", content: "-37" },
        ],
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "The result is -37, not 7, so the fourth term doesn't match. However, let's check if the fifth term onwards increases by 1:",
          },
          {
            type: "tool_use",
            id: "toolu_015HCGCAP5SkLP1Z49V5wTv8",
            name: "eval_js",
            input: {
              code: "let seq = [5, 9, 46, 7, 8, 9, 10, 11];\nfor (let i = 4; i < seq.length - 1; i++) {\n    if (seq[i+1] - seq[i] !== 1) {\n        return false;\n    }\n}\nreturn true;",
            },
          },
        ],
      },
      {
        role: "user",
        content: [
          { type: "tool_result", tool_use_id: "toolu_015HCGCAP5SkLP1Z49V5wTv8", content: "true" },
        ],
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "This confirms that from the fifth term onwards, each term increases by 1.\n\nSo, sequence (D) matches all criteria except for the fourth term calculation. It has arbitrary first two terms, the third term could be a result of some operation on the first two (though we don't know what operation), and from the fifth term onwards, each term increases by 1. The only mismatch is the fourth term.\n\nGiven that none of the sequences perfectly match all the criteria, the answer is:\n\nMATCH: NONE\n\nNone of the given sequences fully match the described pattern. Sequence (D) comes closest, matching all criteria except for the fourth term calculation.",
          },
        ],
      },
    ],
    choiceIdx: null,
  },
  charlie: { alice: null, bob: null },
};

const EXAMPLE_6EC4F_2: State = {
  problem: {
    hex: "6ec4f",
    examples: [
      [10, 10, 101, 12, 13, 14, 15, 16],
      [3, 11, 34, 5, 6, 7, 8, 9],
    ],
    correct: [5, 9, 46, 7, 8, 9, 10, 11],
    incorrects: [
      { hex: "52e54", seq: [5, 9, -4, 12, -18, 27, -49, 71] },
      { hex: "13445", seq: [5, 9, -8, 13, -25, 34, -63, 93] },
      { hex: "10d55", seq: [5, 9, -3, 13, -15, 29, -43, 73] },
    ],
    correctChoiceIdx: 3,
  },

  comments:
    "This is the same problem as the previous example, but this time the LLM gets it right!",

  isRunning: false,
  runError: "",
  alice: {
    messages: [
      {
        role: "user",
        content:
          'Here are 2 number sequences that follow a common pattern.\nThe first 2 terms of each sequence are arbitrary; the subsequent terms follow a pattern.\n\n10 10 101 12 13 14 15 16\n3 11 34 5 6 7 8 9\n\nWhich one of the following sequences follows the same pattern?\nWrite "MATCH: X" if (X) matches the pattern or "MATCH: NONE" if no sequences match.\n\nAlso describe the pattern in a way that would allow someone else to identify the matching number sequence.\nWrite "PATTERN: pattern here", using as many sentences as you\'d like, but keeping it all on one line.\n\n(A) 5 9 -4 12 -18 27 -49 71\n(B) 5 9 -8 13 -25 34 -63 93\n(C) 5 9 -3 13 -15 29 -43 73\n(D) 5 9 46 7 8 9 10 11',
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "To analyze these sequences and determine if any of the given options follow the same pattern, I'll need to evaluate the pattern in the original sequences and then compare it to the given options. Let's use the JavaScript evaluation tool to help us with this analysis.\n\nFirst, let's examine the pattern in the original sequences:",
          },
          {
            type: "tool_use",
            id: "toolu_018FqTa5mff1zC7oLWzBNRba",
            name: "eval_js",
            input: {
              code: "function analyzeSequence(seq) {\n  let diffs = [];\n  for (let i = 2; i < seq.length; i++) {\n    diffs.push(seq[i] - seq[i-1]);\n  }\n  return diffs;\n}\n\nlet seq1 = [10, 10, 101, 12, 13, 14, 15, 16];\nlet seq2 = [3, 11, 34, 5, 6, 7, 8, 9];\n\nreturn {\n  seq1_diffs: analyzeSequence(seq1),\n  seq2_diffs: analyzeSequence(seq2)\n};",
            },
          },
        ],
      },
      {
        role: "user",
        content: [
          {
            type: "tool_result",
            tool_use_id: "toolu_018FqTa5mff1zC7oLWzBNRba",
            content: '{"seq1_diffs":[91,-89,1,1,1,1],"seq2_diffs":[23,-29,1,1,1,1]}',
          },
        ],
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "From this analysis, we can see that both sequences follow the same pattern:\n1. The third term is unrelated to the first two terms.\n2. The fourth term is unrelated to the third term.\n3. From the fourth term onwards, each term increases by 1.\n\nNow, let's analyze the given options:",
          },
          {
            type: "tool_use",
            id: "toolu_01HdL8suzA2Q12BtWrJvYLnH",
            name: "eval_js",
            input: {
              code: "function analyzeSequence(seq) {\n  let diffs = [];\n  for (let i = 2; i < seq.length; i++) {\n    diffs.push(seq[i] - seq[i-1]);\n  }\n  return diffs;\n}\n\nlet seqA = [5, 9, -4, 12, -18, 27, -49, 71];\nlet seqB = [5, 9, -8, 13, -25, 34, -63, 93];\nlet seqC = [5, 9, -3, 13, -15, 29, -43, 73];\nlet seqD = [5, 9, 46, 7, 8, 9, 10, 11];\n\nreturn {\n  seqA_diffs: analyzeSequence(seqA),\n  seqB_diffs: analyzeSequence(seqB),\n  seqC_diffs: analyzeSequence(seqC),\n  seqD_diffs: analyzeSequence(seqD)\n};",
            },
          },
        ],
      },
      {
        role: "user",
        content: [
          {
            type: "tool_result",
            tool_use_id: "toolu_01HdL8suzA2Q12BtWrJvYLnH",
            content:
              '{"seqA_diffs":[-13,16,-30,45,-76,120],"seqB_diffs":[-17,21,-38,59,-97,156],"seqC_diffs":[-12,16,-28,44,-72,116],"seqD_diffs":[37,-39,1,1,1,1]}',
          },
        ],
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "Based on this analysis, we can conclude:\n\nMATCH: D\n\nPATTERN: The pattern consists of two arbitrary initial terms, followed by a third term unrelated to the first two. The fourth term is also unrelated to the third term. From the fourth term onwards, each subsequent term increases by 1.\n\nSequence D (5 9 46 7 8 9 10 11) is the only one that matches this pattern. The first two terms (5 and 9) are arbitrary. The third term (46) is unrelated to the first two. The fourth term (7) is unrelated to the third term. From the fourth term onwards, each term increases by 1 (7, 8, 9, 10, 11).\n\nNone of the other sequences (A, B, or C) follow this pattern, as they don't have the consistent increment of 1 from the fourth term onwards.",
          },
        ],
      },
    ],
    choiceIdx: 3,
    pattern:
      "The pattern consists of two arbitrary initial terms, followed by a third term unrelated to the first two. The fourth term is also unrelated to the third term. From the fourth term onwards, each subsequent term increases by 1.",
  },
  bob: {
    messages: [
      {
        role: "user",
        content:
          'Which one of the following sequences follows this pattern?\nThe first 2 terms of each sequence are arbitrary; the subsequent terms follow a pattern.\nWrite "MATCH: X" if (X) matches the pattern or "MATCH: NONE" if no sequences match.\n\nThe pattern consists of two arbitrary initial terms, followed by a third term unrelated to the first two. The fourth term is also unrelated to the third term. From the fourth term onwards, each subsequent term increases by 1.\n\n(A) 5 9 -4 12 -18 27 -49 71\n(B) 5 9 -8 13 -25 34 -63 93\n(C) 5 9 -3 13 -15 29 -43 73\n(D) 5 9 46 7 8 9 10 11',
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "To answer this question, we need to carefully examine each sequence and compare it to the given pattern. Let's break down the pattern and then analyze each sequence:\n\nPattern:\n1. First 2 terms: arbitrary\n2. Third term: unrelated to first two\n3. Fourth term: unrelated to third term\n4. From fourth term onwards: each subsequent term increases by 1\n\nNow, let's examine each sequence:\n\n(A) 5 9 -4 12 -18 27 -49 71\nThis doesn't match the pattern. After the fourth term (12), the subsequent terms don't increase by 1.\n\n(B) 5 9 -8 13 -25 34 -63 93\nThis doesn't match the pattern. After the fourth term (13), the subsequent terms don't increase by 1.\n\n(C) 5 9 -3 13 -15 29 -43 73\nThis doesn't match the pattern. After the fourth term (13), the subsequent terms don't increase by 1.\n\n(D) 5 9 46 7 8 9 10 11\nThis sequence matches the pattern:\n- First two terms (5 and 9) are arbitrary\n- Third term (46) is unrelated to first two\n- Fourth term (7) is unrelated to third term\n- From the fourth term onwards, each term increases by 1: 7, 8, 9, 10, 11\n\nTherefore, the answer is:\n\nMATCH: D\n\nThe sequence (D) 5 9 46 7 8 9 10 11 is the only one that follows the described pattern.",
          },
        ],
      },
    ],
    choiceIdx: 3,
  },
  charlie: {
    alice: {
      messages: [
        {
          role: "user",
          content:
            'Does all of the following number sequences follow this pattern?\nThe first 2 terms of each sequence are arbitrary; the subsequent terms follow a pattern.\nWrite out your reasoning.\nAt the end, write "ANSWER: YES" or "ANSWER: NO".\n\nThe pattern consists of two arbitrary initial terms, followed by a third term unrelated to the first two. The fourth term is also unrelated to the third term. From the fourth term onwards, each subsequent term increases by 1.\n\n10 10 101 12 13 14 15 16\n3 11 34 5 6 7 8 9\n5 9 46 7 8 9 10 11',
        },
        {
          role: "assistant",
          content: [
            {
              type: "text",
              text: "To evaluate whether all of the given number sequences follow the specified pattern, let's analyze each sequence individually:\n\n1. 10 10 101 12 13 14 15 16\n\n- First two terms (10, 10) are arbitrary: ✓\n- Third term (101) is unrelated to the first two: ✓\n- Fourth term (12) is unrelated to the third term: ✓\n- From the fourth term onwards, each subsequent term increases by 1 (12, 13, 14, 15, 16): ✓\n\nThis sequence follows the pattern.\n\n2. 3 11 34 5 6 7 8 9\n\n- First two terms (3, 11) are arbitrary: ✓\n- Third term (34) is unrelated to the first two: ✓\n- Fourth term (5) is unrelated to the third term: ✓\n- From the fourth term onwards, each subsequent term increases by 1 (5, 6, 7, 8, 9): ✓\n\nThis sequence follows the pattern.\n\n3. 5 9 46 7 8 9 10 11\n\n- First two terms (5, 9) are arbitrary: ✓\n- Third term (46) is unrelated to the first two: ✓\n- Fourth term (7) is unrelated to the third term: ✓\n- From the fourth term onwards, each subsequent term increases by 1 (7, 8, 9, 10, 11): ✓\n\nThis sequence follows the pattern.\n\nReasoning:\nAll three sequences satisfy the given pattern:\n1. They all have two arbitrary initial terms.\n2. The third term in each sequence is unrelated to the first two.\n3. The fourth term is unrelated to the third term.\n4. From the fourth term onwards, each subsequent term increases by 1.\n\nThere are no exceptions or deviations from this pattern in any of the given sequences.\n\nANSWER: YES",
            },
          ],
        },
      ],
      consistent: true,
    },
    bob: {
      messages: [
        {
          role: "user",
          content:
            'Does all of the following number sequences follow this pattern?\nThe first 2 terms of each sequence are arbitrary; the subsequent terms follow a pattern.\nWrite out your reasoning.\nAt the end, write "ANSWER: YES" or "ANSWER: NO".\n\nThe pattern consists of two arbitrary initial terms, followed by a third term unrelated to the first two. The fourth term is also unrelated to the third term. From the fourth term onwards, each subsequent term increases by 1.\n\n10 10 101 12 13 14 15 16\n3 11 34 5 6 7 8 9\n5 9 46 7 8 9 10 11',
        },
        {
          role: "assistant",
          content: [
            {
              type: "text",
              text: "To evaluate whether all of the given number sequences follow the described pattern, let's examine each sequence individually:\n\n1. 10 10 101 12 13 14 15 16\n\nFirst two terms (arbitrary): 10, 10 ✓\nThird term (unrelated to first two): 101 ✓\nFourth term (unrelated to third): 12 ✓\nSubsequent terms increase by 1: 12, 13, 14, 15, 16 ✓\n\nThis sequence follows the pattern.\n\n2. 3 11 34 5 6 7 8 9\n\nFirst two terms (arbitrary): 3, 11 ✓\nThird term (unrelated to first two): 34 ✓\nFourth term (unrelated to third): 5 ✓\nSubsequent terms increase by 1: 5, 6, 7, 8, 9 ✓\n\nThis sequence follows the pattern.\n\n3. 5 9 46 7 8 9 10 11\n\nFirst two terms (arbitrary): 5, 9 ✓\nThird term (unrelated to first two): 46 ✓\nFourth term (unrelated to third): 7 ✓\nSubsequent terms increase by 1: 7, 8, 9, 10, 11 ✓\n\nThis sequence follows the pattern.\n\nReasoning:\nAll three sequences satisfy the given pattern:\n1. The first two terms in each sequence are arbitrary.\n2. The third term in each sequence is unrelated to the first two terms.\n3. The fourth term in each sequence is unrelated to the third term.\n4. From the fourth term onwards, each subsequent term increases by 1.\n\nSince all three sequences adhere to this pattern without any exceptions, we can conclude that they all follow the described pattern.\n\nANSWER: YES",
            },
          ],
        },
      ],
      consistent: true,
    },
  },
};

const EXAMPLE_350D4 = {
  problem: {
    hex: "350d4",
    examples: [
      [11, 3, 11, 11, 19, 27, 43, 67],
      [11, 8, 16, 21, 34, 52, 83, 132],
    ],
    correct: [1, 12, 10, 19, 26, 42, 65, 104],
    incorrects: [
      { hex: "5e974", seq: [1, 12, -10, 23, -32, 56, -87, 144] },
      { hex: "41345", seq: [1, 12, 9, 17, 22, 35, 53, 84] },
      { hex: "52044", seq: [1, 12, -9, 23, -30, 55, -83, 140] },
    ],
    correctChoiceIdx: 2,
  },
  isRunning: false,
  runError: "",
  alice: {
    messages: [
      {
        role: "user",
        content:
          'Here are 2 number sequences that follow a common pattern.\nThe first 2 terms of each sequence are arbitrary; the subsequent terms follow a pattern.\n\n11 3 11 11 19 27 43 67\n11 8 16 21 34 52 83 132\n\nWhich one of the following sequences follows the same pattern?\nWrite "MATCH: X" if (X) matches the pattern or "MATCH: NONE" if no sequences match.\n\nAlso describe the pattern in a way that would allow someone else to identify the matching number sequence.\nWrite "PATTERN: pattern here", using as many sentences as you\'d like, but keeping it all on one line.\n\n(A) 1 12 -10 23 -32 56 -87 144\n(B) 1 12 9 17 22 35 53 84\n(C) 1 12 10 19 26 42 65 104\n(D) 1 12 -9 23 -30 55 -83 140',
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "To analyze these sequences and determine the pattern, I'll need to calculate the differences between consecutive terms. Let's use the JavaScript eval function to help with these calculations.",
          },
          {
            type: "tool_use",
            id: "toolu_01TE7jZEYAcLriCas8MZgpvq",
            name: "eval_js",
            input: {
              code: "function getDifferences(seq) {\n  return seq.slice(1).map((num, i) => num - seq[i]);\n}\n\nconst seq1 = [11, 3, 11, 11, 19, 27, 43, 67];\nconst seq2 = [11, 8, 16, 21, 34, 52, 83, 132];\n\nconst diff1 = getDifferences(seq1);\nconst diff2 = getDifferences(seq2);\n\nreturn {diff1, diff2};",
            },
          },
        ],
      },
      {
        role: "user",
        content: [
          {
            type: "tool_result",
            tool_use_id: "toolu_01TE7jZEYAcLriCas8MZgpvq",
            content: '{"diff1":[-8,8,0,8,8,16,24],"diff2":[-3,8,5,13,18,31,49]}',
          },
        ],
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "Now that we have the differences, let's analyze the pattern:\n\n1. The first difference in each sequence is arbitrary (as mentioned, the first two terms are arbitrary).\n2. Starting from the second difference, we see a pattern:\n   For seq1: 8, 0, 8, 8, 16, 24\n   For seq2: 8, 5, 13, 18, 31, 49\n\nThe pattern appears to be that each subsequent difference is the sum of the previous two differences. This is similar to the Fibonacci sequence, but instead of starting with 1 and 1, it can start with any two numbers.\n\nNow, let's check the given options to see which one follows this pattern:",
          },
          {
            type: "tool_use",
            id: "toolu_011ARDQSamLa4XmhV58giTM2",
            name: "eval_js",
            input: {
              code: "function checkPattern(seq) {\n  const diff = seq.slice(1).map((num, i) => num - seq[i]);\n  for (let i = 2; i < diff.length; i++) {\n    if (diff[i] !== diff[i-1] + diff[i-2]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconst seqA = [1, 12, -10, 23, -32, 56, -87, 144];\nconst seqB = [1, 12, 9, 17, 22, 35, 53, 84];\nconst seqC = [1, 12, 10, 19, 26, 42, 65, 104];\nconst seqD = [1, 12, -9, 23, -30, 55, -83, 140];\n\nreturn {\n  A: checkPattern(seqA),\n  B: checkPattern(seqB),\n  C: checkPattern(seqC),\n  D: checkPattern(seqD)\n};",
            },
          },
        ],
      },
      {
        role: "user",
        content: [
          {
            type: "tool_result",
            tool_use_id: "toolu_011ARDQSamLa4XmhV58giTM2",
            content: '{"A":false,"B":true,"C":true,"D":false}',
          },
        ],
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: 'Based on the results, we can conclude:\n\nMATCH: B\n\nPATTERN: The sequence follows a pattern where, starting from the third term, each term is the sum of the two preceding terms. This is similar to the Fibonacci sequence, but the first two terms can be any arbitrary numbers. To check if a sequence follows this pattern: calculate the differences between consecutive terms, then verify that each difference (starting from the third) is the sum of the two preceding differences.\n\nNote that option C also matches the pattern. However, the question asks which "one" of the following sequences follows the same pattern, implying we should choose only one answer. Since B comes before C in the list, we select B as the match.',
          },
        ],
      },
    ],
    choiceIdx: 1,
    pattern:
      "The sequence follows a pattern where, starting from the third term, each term is the sum of the two preceding terms. This is similar to the Fibonacci sequence, but the first two terms can be any arbitrary numbers. To check if a sequence follows this pattern: calculate the differences between consecutive terms, then verify that each difference (starting from the third) is the sum of the two preceding differences.",
  },
  bob: {
    messages: [
      {
        role: "user",
        content:
          'Which one of the following sequences follows this pattern?\nThe first 2 terms of each sequence are arbitrary; the subsequent terms follow a pattern.\nWrite "MATCH: X" if (X) matches the pattern or "MATCH: NONE" if no sequences match.\n\nThe sequence follows a pattern where, starting from the third term, each term is the sum of the two preceding terms. This is similar to the Fibonacci sequence, but the first two terms can be any arbitrary numbers. To check if a sequence follows this pattern: calculate the differences between consecutive terms, then verify that each difference (starting from the third) is the sum of the two preceding differences.\n\n(A) 1 12 -10 23 -32 56 -87 144\n(B) 1 12 9 17 22 35 53 84\n(C) 1 12 10 19 26 42 65 104\n(D) 1 12 -9 23 -30 55 -83 140',
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "To determine which sequence follows the given pattern, we need to check each sequence individually. Let's use the eval_js function to calculate the differences and verify the pattern for each sequence.\n\nLet's start with sequence (A):",
          },
          {
            type: "tool_use",
            id: "toolu_017ZeK1tA9hoYJ6pdjKUpV23",
            name: "eval_js",
            input: {
              code: "function checkSequence(seq) {\n  let differences = [];\n  for (let i = 1; i < seq.length; i++) {\n    differences.push(seq[i] - seq[i-1]);\n  }\n  \n  for (let i = 2; i < differences.length; i++) {\n    if (differences[i] !== differences[i-1] + differences[i-2]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nlet seqA = [1, 12, -10, 23, -32, 56, -87, 144];\nreturn checkSequence(seqA);",
            },
          },
        ],
      },
      {
        role: "user",
        content: [
          {
            type: "tool_result",
            tool_use_id: "toolu_017ZeK1tA9hoYJ6pdjKUpV23",
            content: "false",
          },
        ],
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "Sequence (A) does not match the pattern.\n\nNow let's check sequence (B):",
          },
          {
            type: "tool_use",
            id: "toolu_01NcgDesLFyGdwLfT6xFUsrw",
            name: "eval_js",
            input: {
              code: "function checkSequence(seq) {\n  let differences = [];\n  for (let i = 1; i < seq.length; i++) {\n    differences.push(seq[i] - seq[i-1]);\n  }\n  \n  for (let i = 2; i < differences.length; i++) {\n    if (differences[i] !== differences[i-1] + differences[i-2]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nlet seqB = [1, 12, 9, 17, 22, 35, 53, 84];\nreturn checkSequence(seqB);",
            },
          },
        ],
      },
      {
        role: "user",
        content: [
          { type: "tool_result", tool_use_id: "toolu_01NcgDesLFyGdwLfT6xFUsrw", content: "true" },
        ],
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "Sequence (B) matches the pattern.\n\nSince we've found a match, we don't need to check the remaining sequences. However, for completeness, let's verify sequences (C) and (D):",
          },
          {
            type: "tool_use",
            id: "toolu_01NifpPLcHLX8tXwBrede4tW",
            name: "eval_js",
            input: {
              code: "function checkSequence(seq) {\n  let differences = [];\n  for (let i = 1; i < seq.length; i++) {\n    differences.push(seq[i] - seq[i-1]);\n  }\n  \n  for (let i = 2; i < differences.length; i++) {\n    if (differences[i] !== differences[i-1] + differences[i-2]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nlet seqC = [1, 12, 10, 19, 26, 42, 65, 104];\nlet seqD = [1, 12, -9, 23, -30, 55, -83, 140];\nreturn [checkSequence(seqC), checkSequence(seqD)];",
            },
          },
        ],
      },
      {
        role: "user",
        content: [
          {
            type: "tool_result",
            tool_use_id: "toolu_01NifpPLcHLX8tXwBrede4tW",
            content: "[true,false]",
          },
        ],
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "Based on these results, we can conclude:\n\nSequence (A) does not match the pattern.\nSequence (B) matches the pattern.\nSequence (C) also matches the pattern.\nSequence (D) does not match the pattern.\n\nSince we found two sequences that match the pattern (B and C), we cannot uniquely identify a single matching sequence. Therefore, the answer is:\n\nMATCH: NONE\n\nAlthough sequences (B) and (C) both follow the described pattern, the question asks for a unique match, which we don't have in this case.",
          },
        ],
      },
    ],
    choiceIdx: null,
  },
  charlie: {
    alice: {
      messages: [
        {
          role: "user",
          content:
            'Does all of the following number sequences follow this pattern?\nThe first 2 terms of each sequence are arbitrary; the subsequent terms follow a pattern.\nWrite out your reasoning.\nAt the end, write "ANSWER: YES" or "ANSWER: NO".\n\nThe sequence follows a pattern where, starting from the third term, each term is the sum of the two preceding terms. This is similar to the Fibonacci sequence, but the first two terms can be any arbitrary numbers. To check if a sequence follows this pattern: calculate the differences between consecutive terms, then verify that each difference (starting from the third) is the sum of the two preceding differences.\n\n11 3 11 11 19 27 43 67\n11 8 16 21 34 52 83 132\n1 12 9 17 22 35 53 84',
        },
        {
          role: "assistant",
          content: [
            {
              type: "text",
              text: "To determine if all the given number sequences follow the described pattern, I'll evaluate each sequence individually. The pattern we're looking for is where, starting from the third term, each term is the sum of the two preceding terms.\n\nLet's analyze each sequence:\n\n1. 11, 3, 11, 11, 19, 27, 43, 67\n\nLet's check if each term (starting from the third) is the sum of the two preceding terms:\n11 = 11 + 3 (✓)\n11 = 3 + 11 (✓)\n19 = 11 + 11 (✓)\n27 = 11 + 19 (✓)\n43 = 19 + 27 (✓)\n67 = 27 + 43 (✓)\n\nThis sequence follows the pattern.\n\n2. 11, 8, 16, 21, 34, 52, 83, 132\n\nLet's check:\n16 = 11 + 8 (✓)\n21 = 8 + 16 (✓)\n34 = 16 + 21 (✓)\n52 = 21 + 34 (✓)\n83 = 34 + 52 (✓)\n132 = 52 + 83 (✓)\n\nThis sequence also follows the pattern.\n\n3. 1, 12, 9, 17, 22, 35, 53, 84\n\nLet's check:\n9 = 1 + 12 (✓)\n17 = 12 + 9 (✓)\n22 = 9 + 17 (✓)\n35 = 17 + 22 (✓)\n53 = 22 + 35 (✓)\n84 = 35 + 53 (✓)\n\nThis sequence also follows the pattern.\n\nReasoning:\nAll three sequences satisfy the condition that, starting from the third term, each term is the sum of the two preceding terms. The first two terms in each sequence are indeed arbitrary, as they don't follow any specific pattern, but they serve as the starting points for the subsequent terms.\n\nThis pattern is similar to the Fibonacci sequence, but with arbitrary starting numbers instead of the traditional 0 and 1. The key characteristic is that each new term depends only on the sum of the two terms immediately before it, regardless of what those initial terms are.\n\nANSWER: YES",
            },
          ],
        },
      ],
      consistent: true,
    },
    bob: null,
  },
};

const EXAMPLE_1A254: State = {
  problem: {
    hex: "1a254",
    examples: [
      [6, 10, 14, 22, 34, 54, 86, 138],
      [4, 9, 11, 18, 27, 43, 68, 109],
    ],
    correct: [4, 7, 9, 14, 21, 33, 52, 83],
    incorrects: [
      { hex: "c49f", seq: [4, 7, 11, 15, 19, 23, 27, 31] },
      { hex: "e45e4", seq: [4, 7, -4, 10, -15, 24, -40, 63] },
      { hex: "26b5", seq: [4, 7, 10, 13, 16, 19, 22, 25] },
    ],
    correctChoiceIdx: 0,
  },

  comments: "The LLM is pretty good at recognizing variations on the Fibonacci sequence!",

  isRunning: false,
  runError: "",
  alice: {
    messages: [
      {
        role: "user",
        content:
          'Here are 2 number sequences that follow a common pattern.\nThe first 2 terms of each sequence are arbitrary; the subsequent terms follow a pattern.\n\n6 10 14 22 34 54 86 138\n4 9 11 18 27 43 68 109\n\nWhich one of the following sequences follows the same pattern?\nWrite "MATCH: X" if (X) matches the pattern or "MATCH: NONE" if no sequences match.\n\nAlso describe the pattern in a way that would allow someone else to identify the matching number sequence.\nWrite "PATTERN: pattern here", using as many sentences as you\'d like, but keeping it all on one line.\n\n(A) 4 7 9 14 21 33 52 83\n(B) 4 7 11 15 19 23 27 31\n(C) 4 7 -4 10 -15 24 -40 63\n(D) 4 7 10 13 16 19 22 25',
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "To analyze these sequences and determine if any of the given options match the pattern, I'll need to evaluate the pattern in the original sequences. Let's use the JavaScript eval function to help us calculate and compare the sequences.\n\nFirst, let's confirm the pattern in the original sequences:",
          },
          {
            type: "tool_use",
            id: "toolu_01Wm3jfoF1GRh8KYE7XDZ74q",
            name: "eval_js",
            input: {
              code: "function checkPattern(seq) {\n    let diffs = [];\n    for (let i = 2; i < seq.length; i++) {\n        diffs.push(seq[i] - seq[i-1] - seq[i-2]);\n    }\n    return diffs.every((val, i, arr) => val === arr[0]);\n}\n\nlet seq1 = [6, 10, 14, 22, 34, 54, 86, 138];\nlet seq2 = [4, 9, 11, 18, 27, 43, 68, 109];\n\nreturn [checkPattern(seq1), checkPattern(seq2)];",
            },
          },
        ],
      },
      {
        role: "user",
        content: [
          {
            type: "tool_result",
            tool_use_id: "toolu_01Wm3jfoF1GRh8KYE7XDZ74q",
            content: "[true,true]",
          },
        ],
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "The result confirms that both original sequences follow the same pattern. Now, let's check each of the given options:",
          },
          {
            type: "tool_use",
            id: "toolu_01Qbh3fPqwZik2NSVTudcjfD",
            name: "eval_js",
            input: {
              code: "function checkPattern(seq) {\n    let diffs = [];\n    for (let i = 2; i < seq.length; i++) {\n        diffs.push(seq[i] - seq[i-1] - seq[i-2]);\n    }\n    return diffs.every((val, i, arr) => val === arr[0]);\n}\n\nlet seqA = [4, 7, 9, 14, 21, 33, 52, 83];\nlet seqB = [4, 7, 11, 15, 19, 23, 27, 31];\nlet seqC = [4, 7, -4, 10, -15, 24, -40, 63];\nlet seqD = [4, 7, 10, 13, 16, 19, 22, 25];\n\nreturn [checkPattern(seqA), checkPattern(seqB), checkPattern(seqC), checkPattern(seqD)];",
            },
          },
        ],
      },
      {
        role: "user",
        content: [
          {
            type: "tool_result",
            tool_use_id: "toolu_01Qbh3fPqwZik2NSVTudcjfD",
            content: "[true,false,false,false]",
          },
        ],
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "Based on these results, we can conclude:\n\nMATCH: A\n\nPATTERN: Each term after the first two is the sum of the two preceding terms, plus a constant. This constant is the difference between the third term and the sum of the first two terms. For example, in the original sequences, 14 - (6 + 10) = -2 and 11 - (4 + 9) = -2. This -2 is then added to each subsequent sum to generate the next term in the sequence.\n\nTo break it down further:\n1. Start with any two numbers.\n2. Calculate the difference between the third term and the sum of the first two terms. This difference becomes the constant.\n3. For each subsequent term, add the two preceding terms and then add the constant.\n4. Repeat step 3 for the rest of the sequence.\n\nThis pattern is a variation of the Fibonacci sequence, with an added constant in each step. It creates a sequence that grows at a rate slightly different from the standard Fibonacci sequence, depending on the value of the constant.",
          },
        ],
      },
    ],
    choiceIdx: 0,
    pattern:
      "Each term after the first two is the sum of the two preceding terms, plus a constant. This constant is the difference between the third term and the sum of the first two terms. For example, in the original sequences, 14 - (6 + 10) = -2 and 11 - (4 + 9) = -2. This -2 is then added to each subsequent sum to generate the next term in the sequence.",
  },
  bob: {
    messages: [
      {
        role: "user",
        content:
          'Which one of the following sequences follows this pattern?\nThe first 2 terms of each sequence are arbitrary; the subsequent terms follow a pattern.\nWrite "MATCH: X" if (X) matches the pattern or "MATCH: NONE" if no sequences match.\n\nEach term after the first two is the sum of the two preceding terms, plus a constant. This constant is the difference between the third term and the sum of the first two terms. For example, in the original sequences, 14 - (6 + 10) = -2 and 11 - (4 + 9) = -2. This -2 is then added to each subsequent sum to generate the next term in the sequence.\n\n(A) 4 7 9 14 21 33 52 83\n(B) 4 7 11 15 19 23 27 31\n(C) 4 7 -4 10 -15 24 -40 63\n(D) 4 7 10 13 16 19 22 25',
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "To determine which sequence matches the given pattern, we need to check each sequence. Let's evaluate them one by one using the pattern described:\n\n1. The first two terms are arbitrary.\n2. The third term is the sum of the first two terms plus a constant.\n3. This constant is then added to each subsequent sum to generate the next term.\n\nLet's use the JavaScript eval function to help us calculate and check each sequence.",
          },
          {
            type: "tool_use",
            id: "toolu_01VwB7LvLuZg5L5J5GCuFDfw",
            name: "eval_js",
            input: {
              code: "function checkSequence(seq) {\n    if (seq.length < 3) return false;\n    \n    const constant = seq[2] - (seq[0] + seq[1]);\n    \n    for (let i = 3; i < seq.length; i++) {\n        if (seq[i] !== seq[i-1] + seq[i-2] + constant) {\n            return false;\n        }\n    }\n    \n    return true;\n}\n\nconst sequences = [\n    [4, 7, 9, 14, 21, 33, 52, 83],\n    [4, 7, 11, 15, 19, 23, 27, 31],\n    [4, 7, -4, 10, -15, 24, -40, 63],\n    [4, 7, 10, 13, 16, 19, 22, 25]\n];\n\nconst results = sequences.map(checkSequence);\n\nreturn results;",
            },
          },
        ],
      },
      {
        role: "user",
        content: [
          {
            type: "tool_result",
            tool_use_id: "toolu_01VwB7LvLuZg5L5J5GCuFDfw",
            content: "[true,false,false,false]",
          },
        ],
      },
      {
        role: "assistant",
        content: [
          {
            type: "text",
            text: "Now, let's interpret the results:\n\n(A) [4, 7, 9, 14, 21, 33, 52, 83] - Result: true\n    This sequence matches the pattern. Let's verify:\n    Constant = 9 - (4 + 7) = -2\n    14 = 7 + 9 + (-2)\n    21 = 9 + 14 + (-2)\n    33 = 14 + 21 + (-2)\n    52 = 21 + 33 + (-2)\n    83 = 33 + 52 + (-2)\n\n(B) [4, 7, 11, 15, 19, 23, 27, 31] - Result: false\n    This sequence doesn't match the pattern.\n\n(C) [4, 7, -4, 10, -15, 24, -40, 63] - Result: false\n    This sequence doesn't match the pattern.\n\n(D) [4, 7, 10, 13, 16, 19, 22, 25] - Result: false\n    This sequence doesn't match the pattern.\n\nBased on these results, we can conclude:\n\nMATCH: A\n\nSequence A is the only one that follows the described pattern. In this sequence, each term after the first two is indeed the sum of the two preceding terms, plus a constant of -2.",
          },
        ],
      },
    ],
    choiceIdx: 0,
  },
  charlie: {
    alice: {
      messages: [
        {
          role: "user",
          content:
            'Does all of the following number sequences follow this pattern?\nThe first 2 terms of each sequence are arbitrary; the subsequent terms follow a pattern.\nWrite out your reasoning.\nAt the end, write "ANSWER: YES" or "ANSWER: NO".\n\nEach term after the first two is the sum of the two preceding terms, plus a constant. This constant is the difference between the third term and the sum of the first two terms. For example, in the original sequences, 14 - (6 + 10) = -2 and 11 - (4 + 9) = -2. This -2 is then added to each subsequent sum to generate the next term in the sequence.\n\n6 10 14 22 34 54 86 138\n4 9 11 18 27 43 68 109\n4 7 9 14 21 33 52 83',
        },
        {
          role: "assistant",
          content: [
            {
              type: "text",
              text: "To evaluate whether all of the given number sequences follow the described pattern, let's analyze each sequence individually. We'll use JavaScript to help us verify the calculations.\n\nLet's start with a function to check if a sequence follows the pattern:",
            },
            {
              type: "tool_use",
              id: "toolu_01ECs77MqqvAWSx5DBFMuVye",
              name: "eval_js",
              input: {
                code: "function checkSequence(seq) {\n    if (seq.length < 3) return false;\n    \n    const constant = seq[2] - (seq[0] + seq[1]);\n    \n    for (let i = 3; i < seq.length; i++) {\n        if (seq[i] !== seq[i-1] + seq[i-2] + constant) {\n            return false;\n        }\n    }\n    \n    return true;\n}\n\nconst sequences = [\n    [6, 10, 14, 22, 34, 54, 86, 138],\n    [4, 9, 11, 18, 27, 43, 68, 109],\n    [4, 7, 9, 14, 21, 33, 52, 83]\n];\n\nconst results = sequences.map(seq => checkSequence(seq));\n\nreturn {\n    results: results,\n    allValid: results.every(r => r === true)\n};",
              },
            },
          ],
        },
        {
          role: "user",
          content: [
            {
              type: "tool_result",
              tool_use_id: "toolu_01ECs77MqqvAWSx5DBFMuVye",
              content: '{"results":[true,true,true],"allValid":true}',
            },
          ],
        },
        {
          role: "assistant",
          content: [
            {
              type: "text",
              text: "Now, let's analyze each sequence:\n\n1. Sequence: 6 10 14 22 34 54 86 138\n   Constant = 14 - (6 + 10) = -2\n   Let's verify:\n   22 = 10 + 14 + (-2)\n   34 = 14 + 22 + (-2)\n   54 = 22 + 34 + (-2)\n   86 = 34 + 54 + (-2)\n   138 = 54 + 86 + (-2)\n   This sequence follows the pattern.\n\n2. Sequence: 4 9 11 18 27 43 68 109\n   Constant = 11 - (4 + 9) = -2\n   Let's verify:\n   18 = 9 + 11 + (-2)\n   27 = 11 + 18 + (-2)\n   43 = 18 + 27 + (-2)\n   68 = 27 + 43 + (-2)\n   109 = 43 + 68 + (-2)\n   This sequence follows the pattern.\n\n3. Sequence: 4 7 9 14 21 33 52 83\n   Constant = 9 - (4 + 7) = -2\n   Let's verify:\n   14 = 7 + 9 + (-2)\n   21 = 9 + 14 + (-2)\n   33 = 14 + 21 + (-2)\n   52 = 21 + 33 + (-2)\n   83 = 33 + 52 + (-2)\n   This sequence follows the pattern.\n\nThe JavaScript function we used confirms that all three sequences follow the described pattern. Each sequence has a constant of -2, which is added to the sum of the two preceding terms to generate the next term.\n\nANSWER: YES\n\nAll three number sequences follow the described pattern. In each case, the constant is -2, and every term after the first two is indeed the sum of the two preceding terms plus this constant.",
            },
          ],
        },
      ],
      consistent: true,
    },
    bob: {
      messages: [
        {
          role: "user",
          content:
            'Does all of the following number sequences follow this pattern?\nThe first 2 terms of each sequence are arbitrary; the subsequent terms follow a pattern.\nWrite out your reasoning.\nAt the end, write "ANSWER: YES" or "ANSWER: NO".\n\nEach term after the first two is the sum of the two preceding terms, plus a constant. This constant is the difference between the third term and the sum of the first two terms. For example, in the original sequences, 14 - (6 + 10) = -2 and 11 - (4 + 9) = -2. This -2 is then added to each subsequent sum to generate the next term in the sequence.\n\n6 10 14 22 34 54 86 138\n4 9 11 18 27 43 68 109\n4 7 9 14 21 33 52 83',
        },
        {
          role: "assistant",
          content: [
            {
              type: "text",
              text: "To determine if all the given number sequences follow the described pattern, let's analyze each sequence individually using the eval_js function to perform the calculations. We'll check if each term after the first two is indeed the sum of the two preceding terms plus a constant, where the constant is determined by the difference between the third term and the sum of the first two terms.\n\nLet's start with the first sequence:",
            },
            {
              type: "tool_use",
              id: "toolu_01C7ubXnNa9Sr11kDJ5cqoLd",
              name: "eval_js",
              input: {
                code: "function checkSequence(seq) {\n  const constant = seq[2] - (seq[0] + seq[1]);\n  for (let i = 3; i < seq.length; i++) {\n    if (seq[i] !== seq[i-1] + seq[i-2] + constant) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconst seq1 = [6, 10, 14, 22, 34, 54, 86, 138];\nreturn checkSequence(seq1);",
              },
            },
          ],
        },
        {
          role: "user",
          content: [
            {
              type: "tool_result",
              tool_use_id: "toolu_01C7ubXnNa9Sr11kDJ5cqoLd",
              content: "true",
            },
          ],
        },
        {
          role: "assistant",
          content: [
            {
              type: "text",
              text: "The result for the first sequence is true, which means it follows the described pattern. Let's break it down:\n1. Constant = 14 - (6 + 10) = -2\n2. Each subsequent term: 22 = 10 + 14 + (-2), 34 = 14 + 22 + (-2), and so on.\n\nNow, let's check the second sequence:",
            },
            {
              type: "tool_use",
              id: "toolu_011Z13HxZJV8NeoK1MTdJX82",
              name: "eval_js",
              input: {
                code: "function checkSequence(seq) {\n  const constant = seq[2] - (seq[0] + seq[1]);\n  for (let i = 3; i < seq.length; i++) {\n    if (seq[i] !== seq[i-1] + seq[i-2] + constant) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconst seq2 = [4, 9, 11, 18, 27, 43, 68, 109];\nreturn checkSequence(seq2);",
              },
            },
          ],
        },
        {
          role: "user",
          content: [
            {
              type: "tool_result",
              tool_use_id: "toolu_011Z13HxZJV8NeoK1MTdJX82",
              content: "true",
            },
          ],
        },
        {
          role: "assistant",
          content: [
            {
              type: "text",
              text: "The result for the second sequence is also true. Let's break it down:\n1. Constant = 11 - (4 + 9) = -2\n2. Each subsequent term: 18 = 9 + 11 + (-2), 27 = 11 + 18 + (-2), and so on.\n\nFinally, let's check the third sequence:",
            },
            {
              type: "tool_use",
              id: "toolu_01StBb1y5gATnLiXhzjnvVNa",
              name: "eval_js",
              input: {
                code: "function checkSequence(seq) {\n  const constant = seq[2] - (seq[0] + seq[1]);\n  for (let i = 3; i < seq.length; i++) {\n    if (seq[i] !== seq[i-1] + seq[i-2] + constant) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconst seq3 = [4, 7, 9, 14, 21, 33, 52, 83];\nreturn checkSequence(seq3);",
              },
            },
          ],
        },
        {
          role: "user",
          content: [
            {
              type: "tool_result",
              tool_use_id: "toolu_01StBb1y5gATnLiXhzjnvVNa",
              content: "true",
            },
          ],
        },
        {
          role: "assistant",
          content: [
            {
              type: "text",
              text: "The result for the third sequence is also true. Let's break it down:\n1. Constant = 9 - (4 + 7) = -2\n2. Each subsequent term: 14 = 7 + 9 + (-2), 21 = 9 + 14 + (-2), and so on.\n\nReasoning:\nAll three sequences follow the described pattern:\n1. The first two terms in each sequence are arbitrary.\n2. The constant for each sequence is calculated as the difference between the third term and the sum of the first two terms. In all cases, this constant is -2.\n3. Each subsequent term in all sequences is indeed the sum of the two preceding terms plus the constant (-2).\n\nTherefore, we can conclude that all of the given number sequences follow the specified pattern.\n\nANSWER: YES",
            },
          ],
        },
      ],
      consistent: true,
    },
  },
};

export const EXAMPLES = [
  EXAMPLE_51F85,
  EXAMPLE_623D5,
  EXAMPLE_C50FE,
  EXAMPLE_C6DE6,
  EXAMPLE_6EC4F,
  EXAMPLE_6EC4F_2,
  EXAMPLE_350D4,
  EXAMPLE_1A254,
] as Array<JSONValue & State>;
